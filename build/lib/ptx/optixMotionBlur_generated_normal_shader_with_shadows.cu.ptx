//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-26907403
// Cuda compilation tools, release 10.1, V10.1.243
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_30
.address_size 64

	// .globl	_Z14any_hit_shadowv
.global .align 4 .b8 shading_normal[12];
.global .align 4 .b8 geometric_normal[12];
.global .align 4 .f32 scene_epsilon;
.global .align 4 .b8 top_object[4];
.global .align 4 .b8 top_shadower[4];
.global .align 1 .b8 lights[1];
.global .align 4 .b8 ray[36];
.global .align 4 .f32 t_hit;
.global .align 4 .b8 prd_radiance[20];
.global .align 4 .b8 prd_shadow[12];
.global .align 4 .b8 _ZN21rti_internal_typeinfo14shading_normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo16geometric_normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13scene_epsilonE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10top_objectE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12top_shadowerE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3rayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo5t_hitE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12prd_radianceE[8] = {82, 97, 121, 0, 20, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10prd_shadowE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 1 .b8 _ZN21rti_internal_typename14shading_normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename16geometric_normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename13scene_epsilonE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10top_objectE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12top_shadowerE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3rayE[11] = {111, 112, 116, 105, 120, 58, 58, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_typename5t_hitE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12prd_radianceE[20] = {80, 101, 114, 82, 97, 121, 68, 97, 116, 97, 95, 114, 97, 100, 105, 97, 110, 99, 101, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10prd_shadowE[18] = {80, 101, 114, 82, 97, 121, 68, 97, 116, 97, 95, 115, 104, 97, 100, 111, 119, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum14shading_normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum16geometric_normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13scene_epsilonE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10top_objectE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12top_shadowerE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3rayE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum5t_hitE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12prd_radianceE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10prd_shadowE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic14shading_normalE[25] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 115, 104, 97, 100, 105, 110, 103, 95, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic16geometric_normalE[27] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 103, 101, 111, 109, 101, 116, 114, 105, 99, 95, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic13scene_epsilonE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10top_objectE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12top_shadowerE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic3rayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic5t_hitE[23] = {114, 116, 73, 110, 116, 101, 114, 115, 101, 99, 116, 105, 111, 110, 68, 105, 115, 116, 97, 110, 99, 101, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic12prd_radianceE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic10prd_shadowE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN23rti_internal_annotation14shading_normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation16geometric_normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13scene_epsilonE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10top_objectE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12top_shadowerE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3rayE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation5t_hitE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12prd_radianceE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10prd_shadowE[1];

.visible .entry _Z14any_hit_shadowv(

)
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<2>;


	mov.u64 	%rd1, 0;
	st.global.u32 	[prd_shadow+4], %rd1;
	st.global.u32 	[prd_shadow], %rd1;
	mov.u32 	%r1, 0;
	st.global.u32 	[prd_shadow+8], %r1;
	// inline asm
	call _rt_terminate_ray, ();
	// inline asm
	ret;
}

	// .globl	_Z20closest_hit_radiancev
.visible .entry _Z20closest_hit_radiancev(

)
{
	.local .align 4 .b8 	__local_depot1[12];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<21>;
	.reg .f32 	%f<474>;
	.reg .b32 	%r<102>;
	.reg .b64 	%rd<77>;


	mov.u64 	%SPL, __local_depot1;
	cvta.local.u64 	%SP, %SPL;
	ld.global.f32 	%f195, [ray+12];
	ld.global.f32 	%f196, [t_hit];
	ld.global.f32 	%f197, [ray+16];
	ld.global.f32 	%f198, [ray+20];
	ld.global.f32 	%f199, [ray];
	fma.rn.ftz.f32 	%f1, %f196, %f195, %f199;
	ld.global.f32 	%f200, [ray+4];
	fma.rn.ftz.f32 	%f2, %f196, %f197, %f200;
	ld.global.f32 	%f201, [ray+8];
	fma.rn.ftz.f32 	%f3, %f196, %f198, %f201;
	ld.global.f32 	%f180, [shading_normal];
	ld.global.f32 	%f181, [shading_normal+4];
	ld.global.f32 	%f182, [shading_normal+8];
	mov.u32 	%r25, 7937;
	mov.f32 	%f444, 0f00000000;
	// inline asm
	call (%f176, %f177, %f178, %f179), _rt_transform_tuple, (%r25, %f180, %f181, %f182, %f444);
	// inline asm
	mul.ftz.f32 	%f202, %f177, %f177;
	fma.rn.ftz.f32 	%f203, %f176, %f176, %f202;
	fma.rn.ftz.f32 	%f204, %f178, %f178, %f203;
	rsqrt.approx.ftz.f32 	%f205, %f204;
	mul.ftz.f32 	%f206, %f176, %f205;
	mul.ftz.f32 	%f207, %f177, %f205;
	mul.ftz.f32 	%f208, %f178, %f205;
	ld.global.f32 	%f188, [geometric_normal];
	ld.global.f32 	%f189, [geometric_normal+4];
	ld.global.f32 	%f190, [geometric_normal+8];
	// inline asm
	call (%f184, %f185, %f186, %f187), _rt_transform_tuple, (%r25, %f188, %f189, %f190, %f444);
	// inline asm
	mul.ftz.f32 	%f209, %f185, %f185;
	fma.rn.ftz.f32 	%f210, %f184, %f184, %f209;
	fma.rn.ftz.f32 	%f211, %f186, %f186, %f210;
	rsqrt.approx.ftz.f32 	%f212, %f211;
	mul.ftz.f32 	%f213, %f184, %f212;
	mul.ftz.f32 	%f214, %f185, %f212;
	mul.ftz.f32 	%f215, %f186, %f212;
	ld.global.f32 	%f216, [ray+12];
	mul.ftz.f32 	%f217, %f216, %f213;
	ld.global.f32 	%f218, [ray+16];
	mul.ftz.f32 	%f219, %f214, %f218;
	neg.ftz.f32 	%f220, %f219;
	sub.ftz.f32 	%f221, %f220, %f217;
	ld.global.f32 	%f222, [ray+20];
	mul.ftz.f32 	%f223, %f215, %f222;
	sub.ftz.f32 	%f224, %f221, %f223;
	mov.b32 	 %r28, %f224;
	and.b32  	%r29, %r28, -2147483648;
	or.b32  	%r30, %r29, 1065353216;
	mov.b32 	 %f225, %r30;
	mul.ftz.f32 	%f4, %f206, %f225;
	mul.ftz.f32 	%f5, %f207, %f225;
	mul.ftz.f32 	%f6, %f208, %f225;
	fma.rn.ftz.f32 	%f7, %f206, 0f3F000000, 0f3F000000;
	fma.rn.ftz.f32 	%f8, %f207, 0f3F000000, 0f3F000000;
	fma.rn.ftz.f32 	%f9, %f208, 0f3F000000, 0f3F000000;
	mov.u64 	%rd6, lights;
	cvta.global.u64 	%rd5, %rd6;
	mov.u32 	%r98, 1;
	mov.u32 	%r27, 32;
	// inline asm
	call (%rd1, %rd2, %rd3, %rd4), _rt_buffer_get_size_64, (%rd5, %r98, %r27);
	// inline asm
	cvt.u32.u64	%r1, %rd1;
	setp.eq.s32	%p1, %r1, 0;
	mov.f32 	%f445, %f444;
	mov.f32 	%f446, %f444;
	@%p1 bra 	BB1_37;

	and.b32  	%r2, %r1, 3;
	setp.eq.s32	%p2, %r2, 0;
	mov.f32 	%f444, 0f00000000;
	mov.u32 	%r100, 0;
	mov.f32 	%f445, %f444;
	mov.f32 	%f446, %f444;
	@%p2 bra 	BB1_19;

	setp.eq.s32	%p3, %r2, 1;
	mov.f32 	%f444, 0f00000000;
	mov.u32 	%r99, 0;
	mov.f32 	%f445, %f444;
	mov.f32 	%f446, %f444;
	@%p3 bra 	BB1_14;

	setp.eq.s32	%p4, %r2, 2;
	mov.f32 	%f444, 0f00000000;
	mov.u32 	%r33, 0;
	@%p4 bra 	BB1_4;
	bra.uni 	BB1_5;

BB1_4:
	mov.u32 	%r98, %r33;
	mov.f32 	%f445, %f444;
	mov.f32 	%f446, %f444;
	bra.uni 	BB1_9;

BB1_5:
	mov.u64 	%rd12, 0;
	// inline asm
	call (%rd7), _rt_buffer_get_64, (%rd5, %r98, %r27, %rd12, %rd12, %rd12, %rd12);
	// inline asm
	ld.f32 	%f10, [%rd7];
	ld.f32 	%f11, [%rd7+4];
	ld.f32 	%f12, [%rd7+8];
	ld.f32 	%f13, [%rd7+12];
	ld.f32 	%f14, [%rd7+16];
	ld.f32 	%f15, [%rd7+20];
	ld.u32 	%r3, [%rd7+24];
	sub.ftz.f32 	%f238, %f10, %f1;
	sub.ftz.f32 	%f239, %f11, %f2;
	sub.ftz.f32 	%f240, %f12, %f3;
	mul.ftz.f32 	%f241, %f239, %f239;
	fma.rn.ftz.f32 	%f242, %f238, %f238, %f241;
	fma.rn.ftz.f32 	%f243, %f240, %f240, %f242;
	rsqrt.approx.ftz.f32 	%f244, %f243;
	mul.ftz.f32 	%f16, %f238, %f244;
	mul.ftz.f32 	%f17, %f239, %f244;
	mul.ftz.f32 	%f18, %f240, %f244;
	mul.ftz.f32 	%f245, %f17, %f17;
	fma.rn.ftz.f32 	%f246, %f16, %f16, %f245;
	fma.rn.ftz.f32 	%f19, %f18, %f18, %f246;
	mul.ftz.f32 	%f247, %f5, %f17;
	fma.rn.ftz.f32 	%f248, %f4, %f16, %f247;
	fma.rn.ftz.f32 	%f249, %f6, %f18, %f248;
	setp.leu.ftz.f32	%p5, %f249, 0f00000000;
	mov.f32 	%f445, %f444;
	mov.f32 	%f446, %f444;
	@%p5 bra 	BB1_9;

	setp.eq.s32	%p6, %r3, 0;
	mov.f32 	%f420, 0f3F800000;
	mov.f32 	%f421, %f420;
	mov.f32 	%f422, %f420;
	@%p6 bra 	BB1_8;

	add.u64 	%rd14, %SP, 0;
	add.u64 	%rd15, %SPL, 0;
	mov.u64 	%rd16, 1065353216;
	st.local.u32 	[%rd15+4], %rd16;
	st.local.u32 	[%rd15], %rd16;
	mov.u32 	%r42, 1065353216;
	st.local.u32 	[%rd15+8], %r42;
	ld.global.f32 	%f259, [scene_epsilon];
	ld.global.u32 	%r37, [top_shadower];
	sqrt.approx.ftz.f32 	%f260, %f19;
	mov.u32 	%r38, 1;
	mov.u32 	%r39, 255;
	mov.u32 	%r40, 0;
	mov.u32 	%r41, 12;
	// inline asm
	call _rt_trace_mask_flags_64, (%r37, %f1, %f2, %f3, %f16, %f17, %f18, %r38, %f259, %f260, %r39, %r40, %rd14, %r41);
	// inline asm
	ld.local.f32 	%f420, [%rd15];
	ld.local.f32 	%f421, [%rd15+4];
	ld.local.f32 	%f422, [%rd15+8];

BB1_8:
	mov.u32 	%r98, 1;
	mul.ftz.f32 	%f261, %f7, %f420;
	mul.ftz.f32 	%f262, %f8, %f421;
	mul.ftz.f32 	%f263, %f9, %f422;
	fma.rn.ftz.f32 	%f446, %f13, %f261, 0f00000000;
	fma.rn.ftz.f32 	%f445, %f14, %f262, 0f00000000;
	fma.rn.ftz.f32 	%f444, %f15, %f263, 0f00000000;

BB1_9:
	mov.u32 	%r95, 1;
	cvt.u64.u32	%rd19, %r98;
	mov.u64 	%rd22, 0;
	// inline asm
	call (%rd17), _rt_buffer_get_64, (%rd5, %r95, %r27, %rd19, %rd22, %rd22, %rd22);
	// inline asm
	ld.f32 	%f32, [%rd17];
	ld.f32 	%f33, [%rd17+4];
	ld.f32 	%f34, [%rd17+8];
	ld.f32 	%f35, [%rd17+12];
	ld.f32 	%f36, [%rd17+16];
	ld.f32 	%f37, [%rd17+20];
	ld.u32 	%r6, [%rd17+24];
	sub.ftz.f32 	%f264, %f32, %f1;
	sub.ftz.f32 	%f265, %f33, %f2;
	sub.ftz.f32 	%f266, %f34, %f3;
	mul.ftz.f32 	%f267, %f265, %f265;
	fma.rn.ftz.f32 	%f268, %f264, %f264, %f267;
	fma.rn.ftz.f32 	%f269, %f266, %f266, %f268;
	rsqrt.approx.ftz.f32 	%f270, %f269;
	mul.ftz.f32 	%f38, %f264, %f270;
	mul.ftz.f32 	%f39, %f265, %f270;
	mul.ftz.f32 	%f40, %f266, %f270;
	mul.ftz.f32 	%f271, %f39, %f39;
	fma.rn.ftz.f32 	%f272, %f38, %f38, %f271;
	fma.rn.ftz.f32 	%f41, %f40, %f40, %f272;
	mul.ftz.f32 	%f273, %f5, %f39;
	fma.rn.ftz.f32 	%f274, %f4, %f38, %f273;
	fma.rn.ftz.f32 	%f275, %f6, %f40, %f274;
	setp.leu.ftz.f32	%p7, %f275, 0f00000000;
	@%p7 bra 	BB1_13;

	setp.eq.s32	%p8, %r6, 0;
	mov.f32 	%f426, 0f3F800000;
	mov.f32 	%f427, %f426;
	mov.f32 	%f428, %f426;
	@%p8 bra 	BB1_12;

	add.u64 	%rd24, %SP, 0;
	add.u64 	%rd25, %SPL, 0;
	mov.u64 	%rd26, 1065353216;
	st.local.u32 	[%rd25+4], %rd26;
	st.local.u32 	[%rd25], %rd26;
	mov.u32 	%r51, 1065353216;
	st.local.u32 	[%rd25+8], %r51;
	ld.global.f32 	%f285, [scene_epsilon];
	ld.global.u32 	%r46, [top_shadower];
	sqrt.approx.ftz.f32 	%f286, %f41;
	mov.u32 	%r47, 1;
	mov.u32 	%r48, 255;
	mov.u32 	%r49, 0;
	mov.u32 	%r50, 12;
	// inline asm
	call _rt_trace_mask_flags_64, (%r46, %f1, %f2, %f3, %f38, %f39, %f40, %r47, %f285, %f286, %r48, %r49, %rd24, %r50);
	// inline asm
	ld.local.f32 	%f426, [%rd25];
	ld.local.f32 	%f427, [%rd25+4];
	ld.local.f32 	%f428, [%rd25+8];

BB1_12:
	mul.ftz.f32 	%f287, %f7, %f426;
	mul.ftz.f32 	%f288, %f8, %f427;
	mul.ftz.f32 	%f289, %f9, %f428;
	fma.rn.ftz.f32 	%f446, %f35, %f287, %f446;
	fma.rn.ftz.f32 	%f445, %f36, %f288, %f445;
	fma.rn.ftz.f32 	%f444, %f37, %f289, %f444;

BB1_13:
	add.s32 	%r99, %r98, 1;

BB1_14:
	cvt.s64.s32	%rd29, %r99;
	mov.u32 	%r52, 1;
	mov.u64 	%rd32, 0;
	// inline asm
	call (%rd27), _rt_buffer_get_64, (%rd5, %r52, %r27, %rd29, %rd32, %rd32, %rd32);
	// inline asm
	ld.f32 	%f57, [%rd27];
	ld.f32 	%f58, [%rd27+4];
	ld.f32 	%f59, [%rd27+8];
	ld.f32 	%f60, [%rd27+12];
	ld.f32 	%f61, [%rd27+16];
	ld.f32 	%f62, [%rd27+20];
	ld.u32 	%r10, [%rd27+24];
	sub.ftz.f32 	%f290, %f57, %f1;
	sub.ftz.f32 	%f291, %f58, %f2;
	sub.ftz.f32 	%f292, %f59, %f3;
	mul.ftz.f32 	%f293, %f291, %f291;
	fma.rn.ftz.f32 	%f294, %f290, %f290, %f293;
	fma.rn.ftz.f32 	%f295, %f292, %f292, %f294;
	rsqrt.approx.ftz.f32 	%f296, %f295;
	mul.ftz.f32 	%f63, %f290, %f296;
	mul.ftz.f32 	%f64, %f291, %f296;
	mul.ftz.f32 	%f65, %f292, %f296;
	mul.ftz.f32 	%f297, %f64, %f64;
	fma.rn.ftz.f32 	%f298, %f63, %f63, %f297;
	fma.rn.ftz.f32 	%f66, %f65, %f65, %f298;
	mul.ftz.f32 	%f299, %f5, %f64;
	fma.rn.ftz.f32 	%f300, %f4, %f63, %f299;
	fma.rn.ftz.f32 	%f301, %f6, %f65, %f300;
	setp.leu.ftz.f32	%p9, %f301, 0f00000000;
	@%p9 bra 	BB1_18;

	setp.eq.s32	%p10, %r10, 0;
	mov.f32 	%f435, 0f3F800000;
	mov.f32 	%f436, %f435;
	mov.f32 	%f437, %f435;
	@%p10 bra 	BB1_17;

	mov.u32 	%r97, 1;
	add.u64 	%rd34, %SP, 0;
	add.u64 	%rd35, %SPL, 0;
	mov.u64 	%rd36, 1065353216;
	st.local.u32 	[%rd35+4], %rd36;
	st.local.u32 	[%rd35], %rd36;
	mov.u32 	%r59, 1065353216;
	st.local.u32 	[%rd35+8], %r59;
	ld.global.f32 	%f311, [scene_epsilon];
	ld.global.u32 	%r54, [top_shadower];
	sqrt.approx.ftz.f32 	%f312, %f66;
	mov.u32 	%r56, 255;
	mov.u32 	%r57, 0;
	mov.u32 	%r58, 12;
	// inline asm
	call _rt_trace_mask_flags_64, (%r54, %f1, %f2, %f3, %f63, %f64, %f65, %r97, %f311, %f312, %r56, %r57, %rd34, %r58);
	// inline asm
	ld.local.f32 	%f435, [%rd35];
	ld.local.f32 	%f436, [%rd35+4];
	ld.local.f32 	%f437, [%rd35+8];

BB1_17:
	mul.ftz.f32 	%f313, %f7, %f435;
	mul.ftz.f32 	%f314, %f8, %f436;
	mul.ftz.f32 	%f315, %f9, %f437;
	fma.rn.ftz.f32 	%f446, %f60, %f313, %f446;
	fma.rn.ftz.f32 	%f445, %f61, %f314, %f445;
	fma.rn.ftz.f32 	%f444, %f62, %f315, %f444;

BB1_18:
	add.s32 	%r100, %r99, 1;

BB1_19:
	setp.lt.u32	%p11, %r1, 4;
	@%p11 bra 	BB1_37;

BB1_20:
	cvt.s64.s32	%rd39, %r100;
	mov.u32 	%r60, 1;
	mov.u64 	%rd42, 0;
	// inline asm
	call (%rd37), _rt_buffer_get_64, (%rd5, %r60, %r27, %rd39, %rd42, %rd42, %rd42);
	// inline asm
	ld.f32 	%f85, [%rd37];
	ld.f32 	%f86, [%rd37+4];
	ld.f32 	%f87, [%rd37+8];
	ld.f32 	%f88, [%rd37+12];
	ld.f32 	%f89, [%rd37+16];
	ld.f32 	%f90, [%rd37+20];
	ld.u32 	%r15, [%rd37+24];
	sub.ftz.f32 	%f316, %f85, %f1;
	sub.ftz.f32 	%f317, %f86, %f2;
	sub.ftz.f32 	%f318, %f87, %f3;
	mul.ftz.f32 	%f319, %f317, %f317;
	fma.rn.ftz.f32 	%f320, %f316, %f316, %f319;
	fma.rn.ftz.f32 	%f321, %f318, %f318, %f320;
	rsqrt.approx.ftz.f32 	%f322, %f321;
	mul.ftz.f32 	%f91, %f316, %f322;
	mul.ftz.f32 	%f92, %f317, %f322;
	mul.ftz.f32 	%f93, %f318, %f322;
	mul.ftz.f32 	%f323, %f92, %f92;
	fma.rn.ftz.f32 	%f324, %f91, %f91, %f323;
	fma.rn.ftz.f32 	%f94, %f93, %f93, %f324;
	mul.ftz.f32 	%f325, %f5, %f92;
	fma.rn.ftz.f32 	%f326, %f4, %f91, %f325;
	fma.rn.ftz.f32 	%f327, %f6, %f93, %f326;
	setp.leu.ftz.f32	%p12, %f327, 0f00000000;
	@%p12 bra 	BB1_24;

	setp.eq.s32	%p13, %r15, 0;
	mov.f32 	%f447, 0f3F800000;
	mov.f32 	%f448, %f447;
	mov.f32 	%f449, %f447;
	@%p13 bra 	BB1_23;

	add.u64 	%rd44, %SP, 0;
	add.u64 	%rd45, %SPL, 0;
	mov.u64 	%rd46, 1065353216;
	st.local.u32 	[%rd45+4], %rd46;
	st.local.u32 	[%rd45], %rd46;
	mov.u32 	%r67, 1065353216;
	st.local.u32 	[%rd45+8], %r67;
	ld.global.f32 	%f337, [scene_epsilon];
	ld.global.u32 	%r62, [top_shadower];
	sqrt.approx.ftz.f32 	%f338, %f94;
	mov.u32 	%r64, 255;
	mov.u32 	%r65, 0;
	mov.u32 	%r66, 12;
	// inline asm
	call _rt_trace_mask_flags_64, (%r62, %f1, %f2, %f3, %f91, %f92, %f93, %r60, %f337, %f338, %r64, %r65, %rd44, %r66);
	// inline asm
	ld.local.f32 	%f447, [%rd45];
	ld.local.f32 	%f448, [%rd45+4];
	ld.local.f32 	%f449, [%rd45+8];

BB1_23:
	mul.ftz.f32 	%f339, %f7, %f447;
	mul.ftz.f32 	%f340, %f8, %f448;
	mul.ftz.f32 	%f341, %f9, %f449;
	fma.rn.ftz.f32 	%f446, %f88, %f339, %f446;
	fma.rn.ftz.f32 	%f445, %f89, %f340, %f445;
	fma.rn.ftz.f32 	%f444, %f90, %f341, %f444;

BB1_24:
	add.s32 	%r70, %r100, 1;
	cvt.s64.s32	%rd49, %r70;
	// inline asm
	call (%rd47), _rt_buffer_get_64, (%rd5, %r60, %r27, %rd49, %rd42, %rd42, %rd42);
	// inline asm
	ld.f32 	%f107, [%rd47];
	ld.f32 	%f108, [%rd47+4];
	ld.f32 	%f109, [%rd47+8];
	ld.f32 	%f110, [%rd47+12];
	ld.f32 	%f111, [%rd47+16];
	ld.f32 	%f112, [%rd47+20];
	ld.u32 	%r17, [%rd47+24];
	sub.ftz.f32 	%f342, %f107, %f1;
	sub.ftz.f32 	%f343, %f108, %f2;
	sub.ftz.f32 	%f344, %f109, %f3;
	mul.ftz.f32 	%f345, %f343, %f343;
	fma.rn.ftz.f32 	%f346, %f342, %f342, %f345;
	fma.rn.ftz.f32 	%f347, %f344, %f344, %f346;
	rsqrt.approx.ftz.f32 	%f348, %f347;
	mul.ftz.f32 	%f113, %f342, %f348;
	mul.ftz.f32 	%f114, %f343, %f348;
	mul.ftz.f32 	%f115, %f344, %f348;
	mul.ftz.f32 	%f349, %f114, %f114;
	fma.rn.ftz.f32 	%f350, %f113, %f113, %f349;
	fma.rn.ftz.f32 	%f116, %f115, %f115, %f350;
	mul.ftz.f32 	%f351, %f5, %f114;
	fma.rn.ftz.f32 	%f352, %f4, %f113, %f351;
	fma.rn.ftz.f32 	%f353, %f6, %f115, %f352;
	setp.leu.ftz.f32	%p14, %f353, 0f00000000;
	@%p14 bra 	BB1_28;

	setp.eq.s32	%p15, %r17, 0;
	mov.f32 	%f453, 0f3F800000;
	mov.f32 	%f454, %f453;
	mov.f32 	%f455, %f453;
	@%p15 bra 	BB1_27;

	add.u64 	%rd54, %SP, 0;
	add.u64 	%rd55, %SPL, 0;
	mov.u64 	%rd56, 1065353216;
	st.local.u32 	[%rd55+4], %rd56;
	st.local.u32 	[%rd55], %rd56;
	mov.u32 	%r76, 1065353216;
	st.local.u32 	[%rd55+8], %r76;
	ld.global.f32 	%f363, [scene_epsilon];
	ld.global.u32 	%r71, [top_shadower];
	sqrt.approx.ftz.f32 	%f364, %f116;
	mov.u32 	%r73, 255;
	mov.u32 	%r74, 0;
	mov.u32 	%r75, 12;
	// inline asm
	call _rt_trace_mask_flags_64, (%r71, %f1, %f2, %f3, %f113, %f114, %f115, %r60, %f363, %f364, %r73, %r74, %rd54, %r75);
	// inline asm
	ld.local.f32 	%f453, [%rd55];
	ld.local.f32 	%f454, [%rd55+4];
	ld.local.f32 	%f455, [%rd55+8];

BB1_27:
	mul.ftz.f32 	%f365, %f7, %f453;
	mul.ftz.f32 	%f366, %f8, %f454;
	mul.ftz.f32 	%f367, %f9, %f455;
	fma.rn.ftz.f32 	%f446, %f110, %f365, %f446;
	fma.rn.ftz.f32 	%f445, %f111, %f366, %f445;
	fma.rn.ftz.f32 	%f444, %f112, %f367, %f444;

BB1_28:
	add.s32 	%r79, %r100, 2;
	cvt.s64.s32	%rd59, %r79;
	// inline asm
	call (%rd57), _rt_buffer_get_64, (%rd5, %r60, %r27, %rd59, %rd42, %rd42, %rd42);
	// inline asm
	ld.f32 	%f129, [%rd57];
	ld.f32 	%f130, [%rd57+4];
	ld.f32 	%f131, [%rd57+8];
	ld.f32 	%f132, [%rd57+12];
	ld.f32 	%f133, [%rd57+16];
	ld.f32 	%f134, [%rd57+20];
	ld.u32 	%r19, [%rd57+24];
	sub.ftz.f32 	%f368, %f129, %f1;
	sub.ftz.f32 	%f369, %f130, %f2;
	sub.ftz.f32 	%f370, %f131, %f3;
	mul.ftz.f32 	%f371, %f369, %f369;
	fma.rn.ftz.f32 	%f372, %f368, %f368, %f371;
	fma.rn.ftz.f32 	%f373, %f370, %f370, %f372;
	rsqrt.approx.ftz.f32 	%f374, %f373;
	mul.ftz.f32 	%f135, %f368, %f374;
	mul.ftz.f32 	%f136, %f369, %f374;
	mul.ftz.f32 	%f137, %f370, %f374;
	mul.ftz.f32 	%f375, %f136, %f136;
	fma.rn.ftz.f32 	%f376, %f135, %f135, %f375;
	fma.rn.ftz.f32 	%f138, %f137, %f137, %f376;
	mul.ftz.f32 	%f377, %f5, %f136;
	fma.rn.ftz.f32 	%f378, %f4, %f135, %f377;
	fma.rn.ftz.f32 	%f379, %f6, %f137, %f378;
	setp.leu.ftz.f32	%p16, %f379, 0f00000000;
	@%p16 bra 	BB1_32;

	setp.eq.s32	%p17, %r19, 0;
	mov.f32 	%f459, 0f3F800000;
	mov.f32 	%f460, %f459;
	mov.f32 	%f461, %f459;
	@%p17 bra 	BB1_31;

	add.u64 	%rd64, %SP, 0;
	add.u64 	%rd65, %SPL, 0;
	mov.u64 	%rd66, 1065353216;
	st.local.u32 	[%rd65+4], %rd66;
	st.local.u32 	[%rd65], %rd66;
	mov.u32 	%r85, 1065353216;
	st.local.u32 	[%rd65+8], %r85;
	ld.global.f32 	%f389, [scene_epsilon];
	ld.global.u32 	%r80, [top_shadower];
	sqrt.approx.ftz.f32 	%f390, %f138;
	mov.u32 	%r82, 255;
	mov.u32 	%r83, 0;
	mov.u32 	%r84, 12;
	// inline asm
	call _rt_trace_mask_flags_64, (%r80, %f1, %f2, %f3, %f135, %f136, %f137, %r60, %f389, %f390, %r82, %r83, %rd64, %r84);
	// inline asm
	ld.local.f32 	%f459, [%rd65];
	ld.local.f32 	%f460, [%rd65+4];
	ld.local.f32 	%f461, [%rd65+8];

BB1_31:
	mul.ftz.f32 	%f391, %f7, %f459;
	mul.ftz.f32 	%f392, %f8, %f460;
	mul.ftz.f32 	%f393, %f9, %f461;
	fma.rn.ftz.f32 	%f446, %f132, %f391, %f446;
	fma.rn.ftz.f32 	%f445, %f133, %f392, %f445;
	fma.rn.ftz.f32 	%f444, %f134, %f393, %f444;

BB1_32:
	add.s32 	%r88, %r100, 3;
	cvt.s64.s32	%rd69, %r88;
	// inline asm
	call (%rd67), _rt_buffer_get_64, (%rd5, %r60, %r27, %rd69, %rd42, %rd42, %rd42);
	// inline asm
	ld.f32 	%f151, [%rd67];
	ld.f32 	%f152, [%rd67+4];
	ld.f32 	%f153, [%rd67+8];
	ld.f32 	%f154, [%rd67+12];
	ld.f32 	%f155, [%rd67+16];
	ld.f32 	%f156, [%rd67+20];
	ld.u32 	%r21, [%rd67+24];
	sub.ftz.f32 	%f394, %f151, %f1;
	sub.ftz.f32 	%f395, %f152, %f2;
	sub.ftz.f32 	%f396, %f153, %f3;
	mul.ftz.f32 	%f397, %f395, %f395;
	fma.rn.ftz.f32 	%f398, %f394, %f394, %f397;
	fma.rn.ftz.f32 	%f399, %f396, %f396, %f398;
	rsqrt.approx.ftz.f32 	%f400, %f399;
	mul.ftz.f32 	%f157, %f394, %f400;
	mul.ftz.f32 	%f158, %f395, %f400;
	mul.ftz.f32 	%f159, %f396, %f400;
	mul.ftz.f32 	%f401, %f158, %f158;
	fma.rn.ftz.f32 	%f402, %f157, %f157, %f401;
	fma.rn.ftz.f32 	%f160, %f159, %f159, %f402;
	mul.ftz.f32 	%f403, %f5, %f158;
	fma.rn.ftz.f32 	%f404, %f4, %f157, %f403;
	fma.rn.ftz.f32 	%f405, %f6, %f159, %f404;
	setp.leu.ftz.f32	%p18, %f405, 0f00000000;
	@%p18 bra 	BB1_36;

	setp.eq.s32	%p19, %r21, 0;
	mov.f32 	%f465, 0f3F800000;
	mov.f32 	%f466, %f465;
	mov.f32 	%f467, %f465;
	@%p19 bra 	BB1_35;

	add.u64 	%rd74, %SP, 0;
	add.u64 	%rd75, %SPL, 0;
	mov.u64 	%rd76, 1065353216;
	st.local.u32 	[%rd75+4], %rd76;
	st.local.u32 	[%rd75], %rd76;
	mov.u32 	%r94, 1065353216;
	st.local.u32 	[%rd75+8], %r94;
	ld.global.f32 	%f415, [scene_epsilon];
	ld.global.u32 	%r89, [top_shadower];
	sqrt.approx.ftz.f32 	%f416, %f160;
	mov.u32 	%r91, 255;
	mov.u32 	%r92, 0;
	mov.u32 	%r93, 12;
	// inline asm
	call _rt_trace_mask_flags_64, (%r89, %f1, %f2, %f3, %f157, %f158, %f159, %r60, %f415, %f416, %r91, %r92, %rd74, %r93);
	// inline asm
	ld.local.f32 	%f465, [%rd75];
	ld.local.f32 	%f466, [%rd75+4];
	ld.local.f32 	%f467, [%rd75+8];

BB1_35:
	mul.ftz.f32 	%f417, %f7, %f465;
	mul.ftz.f32 	%f418, %f8, %f466;
	mul.ftz.f32 	%f419, %f9, %f467;
	fma.rn.ftz.f32 	%f446, %f154, %f417, %f446;
	fma.rn.ftz.f32 	%f445, %f155, %f418, %f445;
	fma.rn.ftz.f32 	%f444, %f156, %f419, %f444;

BB1_36:
	add.s32 	%r100, %r100, 4;
	setp.lt.u32	%p20, %r100, %r1;
	@%p20 bra 	BB1_20;

BB1_37:
	st.global.f32 	[prd_radiance], %f446;
	st.global.f32 	[prd_radiance+4], %f445;
	st.global.f32 	[prd_radiance+8], %f444;
	ret;
}


