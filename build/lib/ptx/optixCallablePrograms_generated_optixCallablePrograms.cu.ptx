//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-26907403
// Cuda compilation tools, release 10.1, V10.1.243
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_30
.address_size 64

	// .globl	_Z17shade_from_normal6float3
.visible .global .align 4 .b8 prd_radiance[20];
.visible .global .align 4 .b8 shade_normal[4];
.visible .global .align 4 .b8 geometric_normal[12];
.visible .global .align 1 .b8 shade_ray[1];
.visible .global .align 4 .b8 ray[36];
.visible .global .align 4 .b8 _ZN21rti_internal_typeinfo12prd_radianceE[8] = {82, 97, 121, 0, 20, 0, 0, 0};
.visible .global .align 4 .b8 _ZN21rti_internal_typeinfo12shade_normalE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.visible .global .align 4 .b8 _ZN21rti_internal_typeinfo16geometric_normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.visible .global .align 4 .b8 _ZN21rti_internal_typeinfo3rayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.visible .global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.visible .global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.visible .global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.visible .global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.visible .global .align 1 .b8 _ZN21rti_internal_typename12prd_radianceE[20] = {80, 101, 114, 82, 97, 121, 68, 97, 116, 97, 95, 114, 97, 100, 105, 97, 110, 99, 101, 0};
.visible .global .align 1 .b8 _ZN21rti_internal_typename12shade_normalE[55] = {111, 112, 116, 105, 120, 58, 58, 98, 111, 117, 110, 100, 67, 97, 108, 108, 97, 98, 108, 101, 80, 114, 111, 103, 114, 97, 109, 73, 100, 60, 102, 108, 111, 97, 116, 51, 32, 40, 32, 99, 111, 110, 115, 116, 32, 102, 108, 111, 97, 116, 51, 32, 41, 62, 0};
.visible .global .align 1 .b8 _ZN21rti_internal_typename16geometric_normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.visible .global .align 1 .b8 _ZN21rti_internal_typename3rayE[11] = {111, 112, 116, 105, 120, 58, 58, 82, 97, 121, 0};
.visible .global .align 4 .u32 _ZN21rti_internal_typeenum12prd_radianceE = 4919;
.visible .global .align 4 .u32 _ZN21rti_internal_typeenum12shade_normalE = 4921;
.visible .global .align 4 .u32 _ZN21rti_internal_typeenum16geometric_normalE = 4919;
.visible .global .align 4 .u32 _ZN21rti_internal_typeenum3rayE = 4919;
.visible .global .align 1 .b8 _ZN21rti_internal_semantic12prd_radianceE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.visible .global .align 1 .b8 _ZN21rti_internal_semantic12shade_normalE[1];
.visible .global .align 1 .b8 _ZN21rti_internal_semantic16geometric_normalE[27] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 103, 101, 111, 109, 101, 116, 114, 105, 99, 95, 110, 111, 114, 109, 97, 108, 0};
.visible .global .align 1 .b8 _ZN21rti_internal_semantic3rayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.visible .global .align 1 .b8 _ZN23rti_internal_annotation12prd_radianceE[1];
.visible .global .align 1 .b8 _ZN23rti_internal_annotation12shade_normalE[1];
.visible .global .align 1 .b8 _ZN23rti_internal_annotation16geometric_normalE[1];
.visible .global .align 1 .b8 _ZN23rti_internal_annotation3rayE[1];

.visible .func  (.param .align 4 .b8 func_retval0[12]) _Z17shade_from_normal6float3(
	.param .align 4 .b8 _Z17shade_from_normal6float3_param_0[12]
)
{
	.reg .f32 	%f<14>;


	ld.param.f32 	%f1, [_Z17shade_from_normal6float3_param_0+8];
	ld.param.f32 	%f2, [_Z17shade_from_normal6float3_param_0];
	ld.param.f32 	%f3, [_Z17shade_from_normal6float3_param_0+4];
	mul.ftz.f32 	%f4, %f3, %f3;
	fma.rn.ftz.f32 	%f5, %f2, %f2, %f4;
	fma.rn.ftz.f32 	%f6, %f1, %f1, %f5;
	rsqrt.approx.ftz.f32 	%f7, %f6;
	mul.ftz.f32 	%f8, %f2, %f7;
	mul.ftz.f32 	%f9, %f3, %f7;
	mul.ftz.f32 	%f10, %f1, %f7;
	fma.rn.ftz.f32 	%f11, %f8, 0f3F000000, 0f3F000000;
	fma.rn.ftz.f32 	%f12, %f9, 0f3F000000, 0f3F000000;
	fma.rn.ftz.f32 	%f13, %f10, 0f3F000000, 0f3F000000;
	st.param.f32	[func_retval0+0], %f11;
	st.param.f32	[func_retval0+4], %f12;
	st.param.f32	[func_retval0+8], %f13;
	ret;
}

	// .globl	_Z14shade_from_rayN5optix3RayE
.visible .func  (.param .align 4 .b8 func_retval0[12]) _Z14shade_from_rayN5optix3RayE(
	.param .b64 _Z14shade_from_rayN5optix3RayE_param_0
)
{
	.reg .f32 	%f<14>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_Z14shade_from_rayN5optix3RayE_param_0];
	ld.f32 	%f1, [%rd1+12];
	ld.f32 	%f2, [%rd1+16];
	mul.ftz.f32 	%f3, %f2, %f2;
	fma.rn.ftz.f32 	%f4, %f1, %f1, %f3;
	ld.f32 	%f5, [%rd1+20];
	fma.rn.ftz.f32 	%f6, %f5, %f5, %f4;
	rsqrt.approx.ftz.f32 	%f7, %f6;
	mul.ftz.f32 	%f8, %f7, %f1;
	mul.ftz.f32 	%f9, %f7, %f2;
	mul.ftz.f32 	%f10, %f7, %f5;
	fma.rn.ftz.f32 	%f11, %f8, 0f3F000000, 0f3F000000;
	fma.rn.ftz.f32 	%f12, %f9, 0f3F000000, 0f3F000000;
	fma.rn.ftz.f32 	%f13, %f10, 0f3F000000, 0f3F000000;
	st.param.f32	[func_retval0+0], %f11;
	st.param.f32	[func_retval0+4], %f12;
	st.param.f32	[func_retval0+8], %f13;
	ret;
}

	// .globl	_Z20closest_hit_radiancev
.visible .entry _Z20closest_hit_radiancev(

)
{
	.reg .f32 	%f<7>;
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<3>;


	ld.global.f32 	%f1, [geometric_normal];
	ld.global.f32 	%f2, [geometric_normal+4];
	ld.global.f32 	%f3, [geometric_normal+8];
	ld.global.u32 	%r1, [shade_normal];
	mov.u64 	%rd2, 0;
	// inline asm
	call (%rd1), _rt_callable_program_from_id_v2_64, (%r1, %rd2);
	// inline asm
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .align 4 .b8 param0[12];
	st.param.f32	[param0+0], %f1;
	st.param.f32	[param0+4], %f2;
	st.param.f32	[param0+8], %f3;
	.param .align 4 .b8 retval0[12];
	prototype_0 : .callprototype (.param .align 4 .b8 _[12]) _ (.param .align 4 .b8 _[12]) ;
	call (retval0), 
	%rd1, 
	(
	param0
	)
	, prototype_0;
	ld.param.f32	%f4, [retval0+0];
	ld.param.f32	%f5, [retval0+4];
	ld.param.f32	%f6, [retval0+8];
	
	//{
	}// Callseq End 0
	st.global.f32 	[prd_radiance], %f4;
	st.global.f32 	[prd_radiance+4], %f5;
	st.global.f32 	[prd_radiance+8], %f6;
	ret;
}

	// .globl	_Z4missv
.visible .entry _Z4missv(

)
{
	.local .align 4 .b8 	__local_depot3[36];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .f32 	%f<10>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<14>;


	mov.u64 	%SPL, __local_depot3;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd9, %SP, 0;
	add.u64 	%rd10, %SPL, 0;
	mov.u64 	%rd11, shade_ray;
	cvta.global.u64 	%rd2, %rd11;
	mov.u32 	%r1, 1;
	mov.u32 	%r2, 4;
	mov.u64 	%rd8, 0;
	// inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r1, %r2, %rd8, %rd8, %rd8, %rd8);
	// inline asm
	ld.global.f32 	%f1, [ray];
	ld.global.f32 	%f2, [ray+4];
	ld.global.f32 	%f3, [ray+8];
	ld.global.f32 	%f4, [ray+12];
	ld.global.f32 	%f5, [ray+16];
	ld.global.f32 	%f6, [ray+20];
	ld.global.u32 	%r4, [ray+24];
	ld.global.u32 	%rd12, [ray+28];
	ld.global.u32 	%rd13, [ray+32];
	ld.u32 	%r3, [%rd1];
	// inline asm
	call (%rd7), _rt_callable_program_from_id_v2_64, (%r3, %rd8);
	// inline asm
	st.local.f32 	[%rd10], %f1;
	st.local.f32 	[%rd10+4], %f2;
	st.local.f32 	[%rd10+8], %f3;
	st.local.f32 	[%rd10+12], %f4;
	st.local.f32 	[%rd10+16], %f5;
	st.local.f32 	[%rd10+20], %f6;
	st.local.u32 	[%rd10+24], %r4;
	st.local.u32 	[%rd10+32], %rd13;
	st.local.u32 	[%rd10+28], %rd12;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd9;
	.param .align 4 .b8 retval0[12];
	prototype_1 : .callprototype (.param .align 4 .b8 _[12]) _ (.param .b64 _) ;
	call (retval0), 
	%rd7, 
	(
	param0
	)
	, prototype_1;
	ld.param.f32	%f7, [retval0+0];
	ld.param.f32	%f8, [retval0+4];
	ld.param.f32	%f9, [retval0+8];
	
	//{
	}// Callseq End 1
	st.global.f32 	[prd_radiance], %f7;
	st.global.f32 	[prd_radiance+4], %f8;
	st.global.f32 	[prd_radiance+8], %f9;
	ret;
}


