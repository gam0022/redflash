//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-26907403
// Cuda compilation tools, release 10.1, V10.1.243
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_30
.address_size 64

	// .globl	_Z7any_hitv
.global .align 1 .b8 lights[1];
.global .align 4 .f32 scene_epsilon;
.global .align 4 .b8 particle_position[12];
.global .align 4 .b8 particle_color[12];
.global .align 4 .f32 t_hit;
.global .align 4 .b8 ray[36];
.global .align 4 .b8 prd[20];
.global .align 4 .b8 prd_shadow[12];
.global .align 4 .b8 top_shadower[4];
.global .align 4 .u32 flat_shaded;
.global .align 4 .b8 _ZN21rti_internal_typeinfo13scene_epsilonE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo17particle_positionE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14particle_colorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo5t_hitE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3rayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3prdE[8] = {82, 97, 121, 0, 20, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10prd_shadowE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12top_shadowerE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11flat_shadedE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 1 .b8 _ZN21rti_internal_typename13scene_epsilonE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename17particle_positionE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14particle_colorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename5t_hitE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3rayE[11] = {111, 112, 116, 105, 120, 58, 58, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3prdE[20] = {80, 101, 114, 82, 97, 121, 68, 97, 116, 97, 95, 114, 97, 100, 105, 97, 110, 99, 101, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10prd_shadowE[18] = {80, 101, 114, 82, 97, 121, 68, 97, 116, 97, 95, 115, 104, 97, 100, 111, 119, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12top_shadowerE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename11flat_shadedE[4] = {105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum13scene_epsilonE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum17particle_positionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14particle_colorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum5t_hitE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3rayE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3prdE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10prd_shadowE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12top_shadowerE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11flat_shadedE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic13scene_epsilonE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic17particle_positionE[28] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 112, 97, 114, 116, 105, 99, 108, 101, 95, 112, 111, 115, 105, 116, 105, 111, 110, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic14particle_colorE[25] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 112, 97, 114, 116, 105, 99, 108, 101, 95, 99, 111, 108, 111, 114, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic5t_hitE[23] = {114, 116, 73, 110, 116, 101, 114, 115, 101, 99, 116, 105, 111, 110, 68, 105, 115, 116, 97, 110, 99, 101, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic3rayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic3prdE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic10prd_shadowE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic12top_shadowerE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11flat_shadedE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13scene_epsilonE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation17particle_positionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14particle_colorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation5t_hitE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3rayE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3prdE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10prd_shadowE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12top_shadowerE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11flat_shadedE[1];

.visible .entry _Z7any_hitv(

)
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<2>;


	mov.u64 	%rd1, 0;
	st.global.u32 	[prd_shadow+4], %rd1;
	st.global.u32 	[prd_shadow], %rd1;
	mov.u32 	%r1, 0;
	st.global.u32 	[prd_shadow+8], %r1;
	// inline asm
	call _rt_terminate_ray, ();
	// inline asm
	ret;
}

	// .globl	_Z11closest_hitv
.visible .entry _Z11closest_hitv(

)
{
	.local .align 4 .b8 	__local_depot1[12];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<43>;
	.reg .f32 	%f<472>;
	.reg .b32 	%r<102>;
	.reg .b64 	%rd<77>;


	mov.u64 	%SPL, __local_depot1;
	cvta.local.u64 	%SP, %SPL;
	ld.global.u32 	%r24, [flat_shaded];
	setp.eq.s32	%p1, %r24, 0;
	@%p1 bra 	BB1_2;

	ld.global.f32 	%f187, [particle_color];
	ld.global.f32 	%f188, [particle_color+4];
	ld.global.f32 	%f189, [particle_color+8];
	st.global.f32 	[prd], %f187;
	st.global.f32 	[prd+4], %f188;
	st.global.f32 	[prd+8], %f189;
	bra.uni 	BB1_40;

BB1_2:
	ld.global.f32 	%f193, [t_hit];
	ld.global.f32 	%f194, [ray+12];
	ld.global.f32 	%f195, [ray+16];
	ld.global.f32 	%f196, [ray+20];
	ld.global.f32 	%f197, [ray];
	fma.rn.ftz.f32 	%f1, %f193, %f194, %f197;
	ld.global.f32 	%f198, [ray+4];
	fma.rn.ftz.f32 	%f2, %f193, %f195, %f198;
	ld.global.f32 	%f199, [ray+8];
	fma.rn.ftz.f32 	%f3, %f193, %f196, %f199;
	ld.global.f32 	%f200, [particle_position];
	sub.ftz.f32 	%f201, %f1, %f200;
	ld.global.f32 	%f202, [particle_position+4];
	sub.ftz.f32 	%f203, %f2, %f202;
	ld.global.f32 	%f204, [particle_position+8];
	sub.ftz.f32 	%f205, %f3, %f204;
	mul.ftz.f32 	%f206, %f203, %f203;
	fma.rn.ftz.f32 	%f207, %f201, %f201, %f206;
	fma.rn.ftz.f32 	%f208, %f205, %f205, %f207;
	rsqrt.approx.ftz.f32 	%f209, %f208;
	mul.ftz.f32 	%f4, %f201, %f209;
	mul.ftz.f32 	%f5, %f203, %f209;
	mul.ftz.f32 	%f6, %f205, %f209;
	mov.u64 	%rd6, lights;
	cvta.global.u64 	%rd5, %rd6;
	mov.u32 	%r25, 1;
	mov.u32 	%r26, 32;
	// inline asm
	call (%rd1, %rd2, %rd3, %rd4), _rt_buffer_get_size_64, (%rd5, %r25, %r26);
	// inline asm
	cvt.u32.u64	%r1, %rd1;
	setp.eq.s32	%p2, %r1, 0;
	mov.f32 	%f442, 0f00000000;
	mov.f32 	%f443, %f442;
	mov.f32 	%f444, %f442;
	@%p2 bra 	BB1_39;

	and.b32  	%r2, %r1, 3;
	setp.eq.s32	%p3, %r2, 0;
	mov.f32 	%f442, 0f00000000;
	mov.u32 	%r100, 0;
	mov.f32 	%f443, %f442;
	mov.f32 	%f444, %f442;
	@%p3 bra 	BB1_21;

	setp.eq.s32	%p4, %r2, 1;
	mov.f32 	%f442, 0f00000000;
	mov.u32 	%r99, 0;
	mov.f32 	%f443, %f442;
	mov.f32 	%f444, %f442;
	@%p4 bra 	BB1_16;

	setp.eq.s32	%p5, %r2, 2;
	mov.f32 	%f442, 0f00000000;
	mov.u32 	%r98, 0;
	@%p5 bra 	BB1_6;
	bra.uni 	BB1_7;

BB1_6:
	mov.f32 	%f443, %f442;
	mov.f32 	%f444, %f442;
	bra.uni 	BB1_11;

BB1_7:
	mov.u64 	%rd12, 0;
	// inline asm
	call (%rd7), _rt_buffer_get_64, (%rd5, %r25, %r26, %rd12, %rd12, %rd12, %rd12);
	// inline asm
	ld.f32 	%f7, [%rd7];
	ld.f32 	%f8, [%rd7+4];
	ld.f32 	%f9, [%rd7+8];
	ld.f32 	%f10, [%rd7+12];
	ld.f32 	%f11, [%rd7+16];
	ld.f32 	%f12, [%rd7+20];
	ld.u32 	%r3, [%rd7+24];
	sub.ftz.f32 	%f219, %f7, %f1;
	sub.ftz.f32 	%f220, %f8, %f2;
	sub.ftz.f32 	%f221, %f9, %f3;
	mul.ftz.f32 	%f222, %f220, %f220;
	fma.rn.ftz.f32 	%f223, %f219, %f219, %f222;
	fma.rn.ftz.f32 	%f224, %f221, %f221, %f223;
	sqrt.approx.ftz.f32 	%f13, %f224;
	rsqrt.approx.ftz.f32 	%f225, %f224;
	mul.ftz.f32 	%f14, %f219, %f225;
	mul.ftz.f32 	%f15, %f220, %f225;
	mul.ftz.f32 	%f16, %f221, %f225;
	mul.ftz.f32 	%f226, %f5, %f15;
	fma.rn.ftz.f32 	%f227, %f4, %f14, %f226;
	fma.rn.ftz.f32 	%f17, %f6, %f16, %f227;
	setp.leu.ftz.f32	%p6, %f17, 0f00000000;
	setp.gt.ftz.f32	%p7, %f17, 0f00000000;
	selp.u32	%r32, 1, 0, %p7;
	cvt.rn.f32.s32	%f418, %r32;
	setp.eq.s32	%p8, %r3, 0;
	or.pred  	%p9, %p6, %p8;
	mov.f32 	%f419, %f418;
	mov.f32 	%f420, %f418;
	@%p9 bra 	BB1_9;

	add.u64 	%rd14, %SP, 0;
	add.u64 	%rd15, %SPL, 0;
	mov.u64 	%rd16, 1065353216;
	st.local.u32 	[%rd15+4], %rd16;
	st.local.u32 	[%rd15], %rd16;
	mov.u32 	%r38, 1065353216;
	st.local.u32 	[%rd15+8], %r38;
	ld.global.f32 	%f234, [scene_epsilon];
	ld.global.u32 	%r33, [top_shadower];
	mov.u32 	%r34, 1;
	mov.u32 	%r35, 255;
	mov.u32 	%r36, 0;
	mov.u32 	%r37, 12;
	// inline asm
	call _rt_trace_mask_flags_64, (%r33, %f1, %f2, %f3, %f14, %f15, %f16, %r34, %f234, %f13, %r35, %r36, %rd14, %r37);
	// inline asm
	ld.local.f32 	%f418, [%rd15];
	ld.local.f32 	%f419, [%rd15+4];
	ld.local.f32 	%f420, [%rd15+8];

BB1_9:
	max.ftz.f32 	%f239, %f418, %f419;
	max.ftz.f32 	%f240, %f239, %f420;
	setp.leu.ftz.f32	%p10, %f240, 0f00000000;
	mov.u32 	%r98, %r25;
	mov.f32 	%f443, %f442;
	mov.f32 	%f444, %f442;
	@%p10 bra 	BB1_11;

	mul.ftz.f32 	%f241, %f10, %f418;
	ld.global.f32 	%f242, [particle_color];
	mul.ftz.f32 	%f243, %f17, %f242;
	ld.global.f32 	%f244, [particle_color+4];
	mul.ftz.f32 	%f245, %f17, %f244;
	ld.global.f32 	%f246, [particle_color+8];
	mul.ftz.f32 	%f247, %f17, %f246;
	mul.ftz.f32 	%f248, %f11, %f419;
	mul.ftz.f32 	%f249, %f12, %f420;
	fma.rn.ftz.f32 	%f444, %f241, %f243, 0f00000000;
	fma.rn.ftz.f32 	%f443, %f248, %f245, 0f00000000;
	fma.rn.ftz.f32 	%f442, %f249, %f247, 0f00000000;
	mov.u32 	%r98, %r25;

BB1_11:
	cvt.u64.u32	%rd19, %r98;
	mov.u64 	%rd22, 0;
	// inline asm
	call (%rd17), _rt_buffer_get_64, (%rd5, %r25, %r26, %rd19, %rd22, %rd22, %rd22);
	// inline asm
	ld.f32 	%f31, [%rd17];
	ld.f32 	%f32, [%rd17+4];
	ld.f32 	%f33, [%rd17+8];
	ld.f32 	%f34, [%rd17+12];
	ld.f32 	%f35, [%rd17+16];
	ld.f32 	%f36, [%rd17+20];
	ld.u32 	%r6, [%rd17+24];
	sub.ftz.f32 	%f250, %f31, %f1;
	sub.ftz.f32 	%f251, %f32, %f2;
	sub.ftz.f32 	%f252, %f33, %f3;
	mul.ftz.f32 	%f253, %f251, %f251;
	fma.rn.ftz.f32 	%f254, %f250, %f250, %f253;
	fma.rn.ftz.f32 	%f255, %f252, %f252, %f254;
	sqrt.approx.ftz.f32 	%f37, %f255;
	rsqrt.approx.ftz.f32 	%f256, %f255;
	mul.ftz.f32 	%f38, %f250, %f256;
	mul.ftz.f32 	%f39, %f251, %f256;
	mul.ftz.f32 	%f40, %f252, %f256;
	mul.ftz.f32 	%f257, %f5, %f39;
	fma.rn.ftz.f32 	%f258, %f4, %f38, %f257;
	fma.rn.ftz.f32 	%f41, %f6, %f40, %f258;
	setp.leu.ftz.f32	%p11, %f41, 0f00000000;
	setp.gt.ftz.f32	%p12, %f41, 0f00000000;
	selp.u32	%r43, 1, 0, %p12;
	cvt.rn.f32.s32	%f424, %r43;
	setp.eq.s32	%p13, %r6, 0;
	or.pred  	%p14, %p11, %p13;
	mov.f32 	%f425, %f424;
	mov.f32 	%f426, %f424;
	@%p14 bra 	BB1_13;

	add.u64 	%rd24, %SP, 0;
	add.u64 	%rd25, %SPL, 0;
	mov.u64 	%rd26, 1065353216;
	st.local.u32 	[%rd25+4], %rd26;
	st.local.u32 	[%rd25], %rd26;
	mov.u32 	%r49, 1065353216;
	st.local.u32 	[%rd25+8], %r49;
	ld.global.f32 	%f265, [scene_epsilon];
	ld.global.u32 	%r44, [top_shadower];
	mov.u32 	%r45, 1;
	mov.u32 	%r46, 255;
	mov.u32 	%r47, 0;
	mov.u32 	%r48, 12;
	// inline asm
	call _rt_trace_mask_flags_64, (%r44, %f1, %f2, %f3, %f38, %f39, %f40, %r45, %f265, %f37, %r46, %r47, %rd24, %r48);
	// inline asm
	ld.local.f32 	%f424, [%rd25];
	ld.local.f32 	%f425, [%rd25+4];
	ld.local.f32 	%f426, [%rd25+8];

BB1_13:
	max.ftz.f32 	%f267, %f424, %f425;
	max.ftz.f32 	%f268, %f267, %f426;
	setp.leu.ftz.f32	%p15, %f268, 0f00000000;
	@%p15 bra 	BB1_15;

	mul.ftz.f32 	%f269, %f34, %f424;
	ld.global.f32 	%f270, [particle_color];
	mul.ftz.f32 	%f271, %f41, %f270;
	ld.global.f32 	%f272, [particle_color+4];
	mul.ftz.f32 	%f273, %f41, %f272;
	ld.global.f32 	%f274, [particle_color+8];
	mul.ftz.f32 	%f275, %f41, %f274;
	mul.ftz.f32 	%f276, %f35, %f425;
	mul.ftz.f32 	%f277, %f36, %f426;
	fma.rn.ftz.f32 	%f444, %f269, %f271, %f444;
	fma.rn.ftz.f32 	%f443, %f276, %f273, %f443;
	fma.rn.ftz.f32 	%f442, %f277, %f275, %f442;

BB1_15:
	add.s32 	%r99, %r98, 1;

BB1_16:
	cvt.s64.s32	%rd29, %r99;
	mov.u32 	%r50, 1;
	mov.u64 	%rd32, 0;
	// inline asm
	call (%rd27), _rt_buffer_get_64, (%rd5, %r50, %r26, %rd29, %rd32, %rd32, %rd32);
	// inline asm
	ld.f32 	%f58, [%rd27];
	ld.f32 	%f59, [%rd27+4];
	ld.f32 	%f60, [%rd27+8];
	ld.f32 	%f61, [%rd27+12];
	ld.f32 	%f62, [%rd27+16];
	ld.f32 	%f63, [%rd27+20];
	ld.u32 	%r10, [%rd27+24];
	sub.ftz.f32 	%f278, %f58, %f1;
	sub.ftz.f32 	%f279, %f59, %f2;
	sub.ftz.f32 	%f280, %f60, %f3;
	mul.ftz.f32 	%f281, %f279, %f279;
	fma.rn.ftz.f32 	%f282, %f278, %f278, %f281;
	fma.rn.ftz.f32 	%f283, %f280, %f280, %f282;
	sqrt.approx.ftz.f32 	%f64, %f283;
	rsqrt.approx.ftz.f32 	%f284, %f283;
	mul.ftz.f32 	%f65, %f278, %f284;
	mul.ftz.f32 	%f66, %f279, %f284;
	mul.ftz.f32 	%f67, %f280, %f284;
	mul.ftz.f32 	%f285, %f5, %f66;
	fma.rn.ftz.f32 	%f286, %f4, %f65, %f285;
	fma.rn.ftz.f32 	%f68, %f6, %f67, %f286;
	setp.leu.ftz.f32	%p16, %f68, 0f00000000;
	setp.gt.ftz.f32	%p17, %f68, 0f00000000;
	selp.u32	%r52, 1, 0, %p17;
	cvt.rn.f32.s32	%f433, %r52;
	setp.eq.s32	%p18, %r10, 0;
	or.pred  	%p19, %p16, %p18;
	mov.f32 	%f434, %f433;
	mov.f32 	%f435, %f433;
	@%p19 bra 	BB1_18;

	add.u64 	%rd34, %SP, 0;
	add.u64 	%rd35, %SPL, 0;
	mov.u64 	%rd36, 1065353216;
	st.local.u32 	[%rd35+4], %rd36;
	st.local.u32 	[%rd35], %rd36;
	mov.u32 	%r58, 1065353216;
	st.local.u32 	[%rd35+8], %r58;
	ld.global.f32 	%f293, [scene_epsilon];
	ld.global.u32 	%r53, [top_shadower];
	mov.u32 	%r55, 255;
	mov.u32 	%r56, 0;
	mov.u32 	%r57, 12;
	// inline asm
	call _rt_trace_mask_flags_64, (%r53, %f1, %f2, %f3, %f65, %f66, %f67, %r50, %f293, %f64, %r55, %r56, %rd34, %r57);
	// inline asm
	ld.local.f32 	%f433, [%rd35];
	ld.local.f32 	%f434, [%rd35+4];
	ld.local.f32 	%f435, [%rd35+8];

BB1_18:
	max.ftz.f32 	%f295, %f433, %f434;
	max.ftz.f32 	%f296, %f295, %f435;
	setp.leu.ftz.f32	%p20, %f296, 0f00000000;
	@%p20 bra 	BB1_20;

	mul.ftz.f32 	%f297, %f61, %f433;
	ld.global.f32 	%f298, [particle_color];
	mul.ftz.f32 	%f299, %f68, %f298;
	ld.global.f32 	%f300, [particle_color+4];
	mul.ftz.f32 	%f301, %f68, %f300;
	ld.global.f32 	%f302, [particle_color+8];
	mul.ftz.f32 	%f303, %f68, %f302;
	mul.ftz.f32 	%f304, %f62, %f434;
	mul.ftz.f32 	%f305, %f63, %f435;
	fma.rn.ftz.f32 	%f444, %f297, %f299, %f444;
	fma.rn.ftz.f32 	%f443, %f304, %f301, %f443;
	fma.rn.ftz.f32 	%f442, %f305, %f303, %f442;

BB1_20:
	add.s32 	%r100, %r99, 1;

BB1_21:
	setp.lt.u32	%p21, %r1, 4;
	@%p21 bra 	BB1_39;

BB1_22:
	cvt.s64.s32	%rd39, %r100;
	mov.u32 	%r59, 1;
	mov.u64 	%rd42, 0;
	// inline asm
	call (%rd37), _rt_buffer_get_64, (%rd5, %r59, %r26, %rd39, %rd42, %rd42, %rd42);
	// inline asm
	ld.f32 	%f88, [%rd37];
	ld.f32 	%f89, [%rd37+4];
	ld.f32 	%f90, [%rd37+8];
	ld.f32 	%f91, [%rd37+12];
	ld.f32 	%f92, [%rd37+16];
	ld.f32 	%f93, [%rd37+20];
	ld.u32 	%r15, [%rd37+24];
	sub.ftz.f32 	%f306, %f88, %f1;
	sub.ftz.f32 	%f307, %f89, %f2;
	sub.ftz.f32 	%f308, %f90, %f3;
	mul.ftz.f32 	%f309, %f307, %f307;
	fma.rn.ftz.f32 	%f310, %f306, %f306, %f309;
	fma.rn.ftz.f32 	%f311, %f308, %f308, %f310;
	sqrt.approx.ftz.f32 	%f94, %f311;
	rsqrt.approx.ftz.f32 	%f312, %f311;
	mul.ftz.f32 	%f95, %f306, %f312;
	mul.ftz.f32 	%f96, %f307, %f312;
	mul.ftz.f32 	%f97, %f308, %f312;
	mul.ftz.f32 	%f313, %f5, %f96;
	fma.rn.ftz.f32 	%f314, %f4, %f95, %f313;
	fma.rn.ftz.f32 	%f98, %f6, %f97, %f314;
	setp.leu.ftz.f32	%p22, %f98, 0f00000000;
	setp.gt.ftz.f32	%p23, %f98, 0f00000000;
	selp.u32	%r61, 1, 0, %p23;
	cvt.rn.f32.s32	%f445, %r61;
	setp.eq.s32	%p24, %r15, 0;
	or.pred  	%p25, %p22, %p24;
	mov.f32 	%f446, %f445;
	mov.f32 	%f447, %f445;
	@%p25 bra 	BB1_24;

	add.u64 	%rd44, %SP, 0;
	add.u64 	%rd45, %SPL, 0;
	mov.u64 	%rd46, 1065353216;
	st.local.u32 	[%rd45+4], %rd46;
	st.local.u32 	[%rd45], %rd46;
	mov.u32 	%r67, 1065353216;
	st.local.u32 	[%rd45+8], %r67;
	ld.global.f32 	%f321, [scene_epsilon];
	ld.global.u32 	%r62, [top_shadower];
	mov.u32 	%r64, 255;
	mov.u32 	%r65, 0;
	mov.u32 	%r66, 12;
	// inline asm
	call _rt_trace_mask_flags_64, (%r62, %f1, %f2, %f3, %f95, %f96, %f97, %r59, %f321, %f94, %r64, %r65, %rd44, %r66);
	// inline asm
	ld.local.f32 	%f445, [%rd45];
	ld.local.f32 	%f446, [%rd45+4];
	ld.local.f32 	%f447, [%rd45+8];

BB1_24:
	max.ftz.f32 	%f323, %f445, %f446;
	max.ftz.f32 	%f324, %f323, %f447;
	setp.leu.ftz.f32	%p26, %f324, 0f00000000;
	@%p26 bra 	BB1_26;

	mul.ftz.f32 	%f325, %f91, %f445;
	ld.global.f32 	%f326, [particle_color];
	mul.ftz.f32 	%f327, %f98, %f326;
	ld.global.f32 	%f328, [particle_color+4];
	mul.ftz.f32 	%f329, %f98, %f328;
	ld.global.f32 	%f330, [particle_color+8];
	mul.ftz.f32 	%f331, %f98, %f330;
	mul.ftz.f32 	%f332, %f92, %f446;
	mul.ftz.f32 	%f333, %f93, %f447;
	fma.rn.ftz.f32 	%f444, %f325, %f327, %f444;
	fma.rn.ftz.f32 	%f443, %f332, %f329, %f443;
	fma.rn.ftz.f32 	%f442, %f333, %f331, %f442;

BB1_26:
	add.s32 	%r70, %r100, 1;
	cvt.s64.s32	%rd49, %r70;
	// inline asm
	call (%rd47), _rt_buffer_get_64, (%rd5, %r59, %r26, %rd49, %rd42, %rd42, %rd42);
	// inline asm
	ld.f32 	%f112, [%rd47];
	ld.f32 	%f113, [%rd47+4];
	ld.f32 	%f114, [%rd47+8];
	ld.f32 	%f115, [%rd47+12];
	ld.f32 	%f116, [%rd47+16];
	ld.f32 	%f117, [%rd47+20];
	ld.u32 	%r17, [%rd47+24];
	sub.ftz.f32 	%f334, %f112, %f1;
	sub.ftz.f32 	%f335, %f113, %f2;
	sub.ftz.f32 	%f336, %f114, %f3;
	mul.ftz.f32 	%f337, %f335, %f335;
	fma.rn.ftz.f32 	%f338, %f334, %f334, %f337;
	fma.rn.ftz.f32 	%f339, %f336, %f336, %f338;
	sqrt.approx.ftz.f32 	%f118, %f339;
	rsqrt.approx.ftz.f32 	%f340, %f339;
	mul.ftz.f32 	%f119, %f334, %f340;
	mul.ftz.f32 	%f120, %f335, %f340;
	mul.ftz.f32 	%f121, %f336, %f340;
	mul.ftz.f32 	%f341, %f5, %f120;
	fma.rn.ftz.f32 	%f342, %f4, %f119, %f341;
	fma.rn.ftz.f32 	%f122, %f6, %f121, %f342;
	setp.leu.ftz.f32	%p27, %f122, 0f00000000;
	setp.gt.ftz.f32	%p28, %f122, 0f00000000;
	selp.u32	%r71, 1, 0, %p28;
	cvt.rn.f32.s32	%f451, %r71;
	setp.eq.s32	%p29, %r17, 0;
	or.pred  	%p30, %p27, %p29;
	mov.f32 	%f452, %f451;
	mov.f32 	%f453, %f451;
	@%p30 bra 	BB1_28;

	add.u64 	%rd54, %SP, 0;
	add.u64 	%rd55, %SPL, 0;
	mov.u64 	%rd56, 1065353216;
	st.local.u32 	[%rd55+4], %rd56;
	st.local.u32 	[%rd55], %rd56;
	mov.u32 	%r77, 1065353216;
	st.local.u32 	[%rd55+8], %r77;
	ld.global.f32 	%f349, [scene_epsilon];
	ld.global.u32 	%r72, [top_shadower];
	mov.u32 	%r74, 255;
	mov.u32 	%r75, 0;
	mov.u32 	%r76, 12;
	// inline asm
	call _rt_trace_mask_flags_64, (%r72, %f1, %f2, %f3, %f119, %f120, %f121, %r59, %f349, %f118, %r74, %r75, %rd54, %r76);
	// inline asm
	ld.local.f32 	%f451, [%rd55];
	ld.local.f32 	%f452, [%rd55+4];
	ld.local.f32 	%f453, [%rd55+8];

BB1_28:
	max.ftz.f32 	%f351, %f451, %f452;
	max.ftz.f32 	%f352, %f351, %f453;
	setp.leu.ftz.f32	%p31, %f352, 0f00000000;
	@%p31 bra 	BB1_30;

	mul.ftz.f32 	%f353, %f115, %f451;
	ld.global.f32 	%f354, [particle_color];
	mul.ftz.f32 	%f355, %f122, %f354;
	ld.global.f32 	%f356, [particle_color+4];
	mul.ftz.f32 	%f357, %f122, %f356;
	ld.global.f32 	%f358, [particle_color+8];
	mul.ftz.f32 	%f359, %f122, %f358;
	mul.ftz.f32 	%f360, %f116, %f452;
	mul.ftz.f32 	%f361, %f117, %f453;
	fma.rn.ftz.f32 	%f444, %f353, %f355, %f444;
	fma.rn.ftz.f32 	%f443, %f360, %f357, %f443;
	fma.rn.ftz.f32 	%f442, %f361, %f359, %f442;

BB1_30:
	add.s32 	%r80, %r100, 2;
	cvt.s64.s32	%rd59, %r80;
	// inline asm
	call (%rd57), _rt_buffer_get_64, (%rd5, %r59, %r26, %rd59, %rd42, %rd42, %rd42);
	// inline asm
	ld.f32 	%f136, [%rd57];
	ld.f32 	%f137, [%rd57+4];
	ld.f32 	%f138, [%rd57+8];
	ld.f32 	%f139, [%rd57+12];
	ld.f32 	%f140, [%rd57+16];
	ld.f32 	%f141, [%rd57+20];
	ld.u32 	%r19, [%rd57+24];
	sub.ftz.f32 	%f362, %f136, %f1;
	sub.ftz.f32 	%f363, %f137, %f2;
	sub.ftz.f32 	%f364, %f138, %f3;
	mul.ftz.f32 	%f365, %f363, %f363;
	fma.rn.ftz.f32 	%f366, %f362, %f362, %f365;
	fma.rn.ftz.f32 	%f367, %f364, %f364, %f366;
	sqrt.approx.ftz.f32 	%f142, %f367;
	rsqrt.approx.ftz.f32 	%f368, %f367;
	mul.ftz.f32 	%f143, %f362, %f368;
	mul.ftz.f32 	%f144, %f363, %f368;
	mul.ftz.f32 	%f145, %f364, %f368;
	mul.ftz.f32 	%f369, %f5, %f144;
	fma.rn.ftz.f32 	%f370, %f4, %f143, %f369;
	fma.rn.ftz.f32 	%f146, %f6, %f145, %f370;
	setp.leu.ftz.f32	%p32, %f146, 0f00000000;
	setp.gt.ftz.f32	%p33, %f146, 0f00000000;
	selp.u32	%r81, 1, 0, %p33;
	cvt.rn.f32.s32	%f457, %r81;
	setp.eq.s32	%p34, %r19, 0;
	or.pred  	%p35, %p32, %p34;
	mov.f32 	%f458, %f457;
	mov.f32 	%f459, %f457;
	@%p35 bra 	BB1_32;

	add.u64 	%rd64, %SP, 0;
	add.u64 	%rd65, %SPL, 0;
	mov.u64 	%rd66, 1065353216;
	st.local.u32 	[%rd65+4], %rd66;
	st.local.u32 	[%rd65], %rd66;
	mov.u32 	%r87, 1065353216;
	st.local.u32 	[%rd65+8], %r87;
	ld.global.f32 	%f377, [scene_epsilon];
	ld.global.u32 	%r82, [top_shadower];
	mov.u32 	%r84, 255;
	mov.u32 	%r85, 0;
	mov.u32 	%r86, 12;
	// inline asm
	call _rt_trace_mask_flags_64, (%r82, %f1, %f2, %f3, %f143, %f144, %f145, %r59, %f377, %f142, %r84, %r85, %rd64, %r86);
	// inline asm
	ld.local.f32 	%f457, [%rd65];
	ld.local.f32 	%f458, [%rd65+4];
	ld.local.f32 	%f459, [%rd65+8];

BB1_32:
	max.ftz.f32 	%f379, %f457, %f458;
	max.ftz.f32 	%f380, %f379, %f459;
	setp.leu.ftz.f32	%p36, %f380, 0f00000000;
	@%p36 bra 	BB1_34;

	mul.ftz.f32 	%f381, %f139, %f457;
	ld.global.f32 	%f382, [particle_color];
	mul.ftz.f32 	%f383, %f146, %f382;
	ld.global.f32 	%f384, [particle_color+4];
	mul.ftz.f32 	%f385, %f146, %f384;
	ld.global.f32 	%f386, [particle_color+8];
	mul.ftz.f32 	%f387, %f146, %f386;
	mul.ftz.f32 	%f388, %f140, %f458;
	mul.ftz.f32 	%f389, %f141, %f459;
	fma.rn.ftz.f32 	%f444, %f381, %f383, %f444;
	fma.rn.ftz.f32 	%f443, %f388, %f385, %f443;
	fma.rn.ftz.f32 	%f442, %f389, %f387, %f442;

BB1_34:
	add.s32 	%r90, %r100, 3;
	cvt.s64.s32	%rd69, %r90;
	// inline asm
	call (%rd67), _rt_buffer_get_64, (%rd5, %r59, %r26, %rd69, %rd42, %rd42, %rd42);
	// inline asm
	ld.f32 	%f160, [%rd67];
	ld.f32 	%f161, [%rd67+4];
	ld.f32 	%f162, [%rd67+8];
	ld.f32 	%f163, [%rd67+12];
	ld.f32 	%f164, [%rd67+16];
	ld.f32 	%f165, [%rd67+20];
	ld.u32 	%r21, [%rd67+24];
	sub.ftz.f32 	%f390, %f160, %f1;
	sub.ftz.f32 	%f391, %f161, %f2;
	sub.ftz.f32 	%f392, %f162, %f3;
	mul.ftz.f32 	%f393, %f391, %f391;
	fma.rn.ftz.f32 	%f394, %f390, %f390, %f393;
	fma.rn.ftz.f32 	%f395, %f392, %f392, %f394;
	sqrt.approx.ftz.f32 	%f166, %f395;
	rsqrt.approx.ftz.f32 	%f396, %f395;
	mul.ftz.f32 	%f167, %f390, %f396;
	mul.ftz.f32 	%f168, %f391, %f396;
	mul.ftz.f32 	%f169, %f392, %f396;
	mul.ftz.f32 	%f397, %f5, %f168;
	fma.rn.ftz.f32 	%f398, %f4, %f167, %f397;
	fma.rn.ftz.f32 	%f170, %f6, %f169, %f398;
	setp.leu.ftz.f32	%p37, %f170, 0f00000000;
	setp.gt.ftz.f32	%p38, %f170, 0f00000000;
	selp.u32	%r91, 1, 0, %p38;
	cvt.rn.f32.s32	%f463, %r91;
	setp.eq.s32	%p39, %r21, 0;
	or.pred  	%p40, %p37, %p39;
	mov.f32 	%f464, %f463;
	mov.f32 	%f465, %f463;
	@%p40 bra 	BB1_36;

	add.u64 	%rd74, %SP, 0;
	add.u64 	%rd75, %SPL, 0;
	mov.u64 	%rd76, 1065353216;
	st.local.u32 	[%rd75+4], %rd76;
	st.local.u32 	[%rd75], %rd76;
	mov.u32 	%r97, 1065353216;
	st.local.u32 	[%rd75+8], %r97;
	ld.global.f32 	%f405, [scene_epsilon];
	ld.global.u32 	%r92, [top_shadower];
	mov.u32 	%r94, 255;
	mov.u32 	%r95, 0;
	mov.u32 	%r96, 12;
	// inline asm
	call _rt_trace_mask_flags_64, (%r92, %f1, %f2, %f3, %f167, %f168, %f169, %r59, %f405, %f166, %r94, %r95, %rd74, %r96);
	// inline asm
	ld.local.f32 	%f463, [%rd75];
	ld.local.f32 	%f464, [%rd75+4];
	ld.local.f32 	%f465, [%rd75+8];

BB1_36:
	max.ftz.f32 	%f407, %f463, %f464;
	max.ftz.f32 	%f408, %f407, %f465;
	setp.leu.ftz.f32	%p41, %f408, 0f00000000;
	@%p41 bra 	BB1_38;

	mul.ftz.f32 	%f409, %f163, %f463;
	ld.global.f32 	%f410, [particle_color];
	mul.ftz.f32 	%f411, %f170, %f410;
	ld.global.f32 	%f412, [particle_color+4];
	mul.ftz.f32 	%f413, %f170, %f412;
	ld.global.f32 	%f414, [particle_color+8];
	mul.ftz.f32 	%f415, %f170, %f414;
	mul.ftz.f32 	%f416, %f164, %f464;
	mul.ftz.f32 	%f417, %f165, %f465;
	fma.rn.ftz.f32 	%f444, %f409, %f411, %f444;
	fma.rn.ftz.f32 	%f443, %f416, %f413, %f443;
	fma.rn.ftz.f32 	%f442, %f417, %f415, %f442;

BB1_38:
	add.s32 	%r100, %r100, 4;
	setp.lt.u32	%p42, %r100, %r1;
	@%p42 bra 	BB1_22;

BB1_39:
	st.global.f32 	[prd], %f444;
	st.global.f32 	[prd+4], %f443;
	st.global.f32 	[prd+8], %f442;

BB1_40:
	ret;
}


