//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-26907403
// Cuda compilation tools, release 10.1, V10.1.243
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_30
.address_size 64

	// .globl	_Z19triangle_attributesv
.global .align 4 .b8 shading_normal[12];
.global .align 4 .b8 geometric_normal[12];
.global .align 4 .b8 texcoord[12];
.global .align 8 .b8 barycentrics[8];
.global .align 1 .b8 vertex_buffer[1];
.global .align 1 .b8 normal_buffer[1];
.global .align 1 .b8 texcoord_buffer[1];
.global .align 1 .b8 index_buffer[1];
.global .align 4 .b8 prd_radiance[20];
.global .align 4 .b8 prd_shadow[12];
.global .align 4 .b8 _ZN21rti_internal_typeinfo14shading_normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo16geometric_normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8texcoordE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12barycentricsE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12prd_radianceE[8] = {82, 97, 121, 0, 20, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10prd_shadowE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 1 .b8 _ZN21rti_internal_typename14shading_normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename16geometric_normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename8texcoordE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12barycentricsE[7] = {102, 108, 111, 97, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12prd_radianceE[20] = {80, 101, 114, 82, 97, 121, 68, 97, 116, 97, 95, 114, 97, 100, 105, 97, 110, 99, 101, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10prd_shadowE[18] = {80, 101, 114, 82, 97, 121, 68, 97, 116, 97, 95, 115, 104, 97, 100, 111, 119, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum14shading_normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum16geometric_normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8texcoordE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12barycentricsE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12prd_radianceE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10prd_shadowE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic14shading_normalE[25] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 115, 104, 97, 100, 105, 110, 103, 95, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic16geometric_normalE[27] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 103, 101, 111, 109, 101, 116, 114, 105, 99, 95, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic8texcoordE[19] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 116, 101, 120, 99, 111, 111, 114, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic12barycentricsE[23] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 98, 97, 114, 121, 99, 101, 110, 116, 114, 105, 99, 115, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic12prd_radianceE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic10prd_shadowE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN23rti_internal_annotation14shading_normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation16geometric_normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8texcoordE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12barycentricsE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12prd_radianceE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10prd_shadowE[1];

.visible .entry _Z19triangle_attributesv(

)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<101>;
	.reg .b32 	%r<30>;
	.reg .b64 	%rd<80>;


	// inline asm
	call (%r1), _rt_get_primitive_index, ();
	// inline asm
	cvt.u64.u32	%rd6, %r1;
	mov.u64 	%rd33, index_buffer;
	cvta.global.u64 	%rd5, %rd33;
	mov.u32 	%r10, 1;
	mov.u32 	%r11, 12;
	mov.u64 	%rd27, 0;
	// inline asm
	call (%rd4), _rt_buffer_get_64, (%rd5, %r10, %r11, %rd6, %rd27, %rd27, %rd27);
	// inline asm
	ld.s32 	%rd12, [%rd4];
	mov.u64 	%rd34, vertex_buffer;
	cvta.global.u64 	%rd11, %rd34;
	ld.s32 	%rd18, [%rd4+4];
	ld.s32 	%rd24, [%rd4+8];
	// inline asm
	call (%rd10), _rt_buffer_get_64, (%rd11, %r10, %r11, %rd12, %rd27, %rd27, %rd27);
	// inline asm
	ld.f32 	%f16, [%rd10];
	ld.f32 	%f17, [%rd10+4];
	ld.f32 	%f18, [%rd10+8];
	// inline asm
	call (%rd16), _rt_buffer_get_64, (%rd11, %r10, %r11, %rd18, %rd27, %rd27, %rd27);
	// inline asm
	ld.f32 	%f19, [%rd16];
	ld.f32 	%f20, [%rd16+4];
	ld.f32 	%f21, [%rd16+8];
	// inline asm
	call (%rd22), _rt_buffer_get_64, (%rd11, %r10, %r11, %rd24, %rd27, %rd27, %rd27);
	// inline asm
	sub.ftz.f32 	%f22, %f19, %f16;
	sub.ftz.f32 	%f23, %f20, %f17;
	sub.ftz.f32 	%f24, %f21, %f18;
	ld.f32 	%f25, [%rd22];
	sub.ftz.f32 	%f26, %f25, %f16;
	ld.f32 	%f27, [%rd22+4];
	sub.ftz.f32 	%f28, %f27, %f17;
	ld.f32 	%f29, [%rd22+8];
	sub.ftz.f32 	%f30, %f29, %f18;
	mul.ftz.f32 	%f31, %f23, %f30;
	mul.ftz.f32 	%f32, %f24, %f28;
	sub.ftz.f32 	%f33, %f31, %f32;
	mul.ftz.f32 	%f34, %f24, %f26;
	mul.ftz.f32 	%f35, %f22, %f30;
	sub.ftz.f32 	%f36, %f34, %f35;
	mul.ftz.f32 	%f37, %f22, %f28;
	mul.ftz.f32 	%f38, %f23, %f26;
	sub.ftz.f32 	%f39, %f37, %f38;
	mul.ftz.f32 	%f40, %f36, %f36;
	fma.rn.ftz.f32 	%f41, %f33, %f33, %f40;
	fma.rn.ftz.f32 	%f42, %f39, %f39, %f41;
	rsqrt.approx.ftz.f32 	%f43, %f42;
	mul.ftz.f32 	%f44, %f43, %f33;
	mul.ftz.f32 	%f45, %f43, %f36;
	mul.ftz.f32 	%f46, %f43, %f39;
	st.global.f32 	[geometric_normal], %f44;
	st.global.f32 	[geometric_normal+4], %f45;
	st.global.f32 	[geometric_normal+8], %f46;
	mov.u32 	%r12, 0;
	// inline asm
	call (%f14, %f15), _rt_get_triangle_barycentrics, ();
	// inline asm
	st.global.v2.f32 	[barycentrics], {%f14, %f15};
	st.global.f32 	[texcoord], %f14;
	st.global.f32 	[texcoord+4], %f15;
	st.global.u32 	[texcoord+8], %r12;
	mov.u64 	%rd35, normal_buffer;
	cvta.global.u64 	%rd32, %rd35;
	// inline asm
	call (%rd28, %rd29, %rd30, %rd31), _rt_buffer_get_size_64, (%rd32, %r10, %r11);
	// inline asm
	cvt.u32.u64	%r13, %rd28;
	setp.eq.s32	%p1, %r13, 0;
	@%p1 bra 	BB0_2;

	// inline asm
	call (%rd36), _rt_buffer_get_64, (%rd32, %r10, %r11, %rd18, %rd27, %rd27, %rd27);
	// inline asm
	ld.f32 	%f47, [%rd36];
	ld.global.f32 	%f48, [barycentrics];
	ld.f32 	%f49, [%rd36+4];
	ld.f32 	%f50, [%rd36+8];
	// inline asm
	call (%rd42), _rt_buffer_get_64, (%rd32, %r10, %r11, %rd24, %rd27, %rd27, %rd27);
	// inline asm
	ld.f32 	%f51, [%rd42];
	ld.global.f32 	%f52, [barycentrics+4];
	mul.ftz.f32 	%f53, %f52, %f51;
	ld.f32 	%f54, [%rd42+4];
	mul.ftz.f32 	%f55, %f52, %f54;
	ld.f32 	%f56, [%rd42+8];
	mul.ftz.f32 	%f57, %f52, %f56;
	fma.rn.ftz.f32 	%f58, %f48, %f47, %f53;
	fma.rn.ftz.f32 	%f59, %f48, %f49, %f55;
	fma.rn.ftz.f32 	%f60, %f48, %f50, %f57;
	// inline asm
	call (%rd48), _rt_buffer_get_64, (%rd32, %r10, %r11, %rd12, %rd27, %rd27, %rd27);
	// inline asm
	ld.global.v2.f32 	{%f61, %f62}, [barycentrics];
	mov.f32 	%f64, 0f3F800000;
	sub.ftz.f32 	%f65, %f64, %f61;
	sub.ftz.f32 	%f67, %f65, %f62;
	ld.f32 	%f68, [%rd48];
	ld.f32 	%f69, [%rd48+4];
	ld.f32 	%f70, [%rd48+8];
	fma.rn.ftz.f32 	%f96, %f68, %f67, %f58;
	fma.rn.ftz.f32 	%f97, %f67, %f69, %f59;
	fma.rn.ftz.f32 	%f98, %f67, %f70, %f60;
	bra.uni 	BB0_3;

BB0_2:
	ld.global.f32 	%f96, [geometric_normal];
	ld.global.f32 	%f97, [geometric_normal+4];
	ld.global.f32 	%f98, [geometric_normal+8];

BB0_3:
	st.global.f32 	[shading_normal], %f96;
	st.global.f32 	[shading_normal+4], %f97;
	st.global.f32 	[shading_normal+8], %f98;
	mov.u64 	%rd60, texcoord_buffer;
	cvta.global.u64 	%rd59, %rd60;
	mov.u32 	%r21, 8;
	// inline asm
	call (%rd55, %rd56, %rd57, %rd58), _rt_buffer_get_size_64, (%rd59, %r10, %r21);
	// inline asm
	cvt.u32.u64	%r22, %rd55;
	setp.eq.s32	%p2, %r22, 0;
	mov.f32 	%f99, 0f00000000;
	mov.f32 	%f100, %f99;
	@%p2 bra 	BB0_5;

	// inline asm
	call (%rd61), _rt_buffer_get_64, (%rd59, %r10, %r21, %rd12, %rd27, %rd27, %rd27);
	// inline asm
	ld.v2.f32 	{%f73, %f74}, [%rd61];
	// inline asm
	call (%rd67), _rt_buffer_get_64, (%rd59, %r10, %r21, %rd18, %rd27, %rd27, %rd27);
	// inline asm
	ld.v2.f32 	{%f77, %f78}, [%rd67];
	// inline asm
	call (%rd73), _rt_buffer_get_64, (%rd59, %r10, %r21, %rd24, %rd27, %rd27, %rd27);
	// inline asm
	ld.v2.f32 	{%f81, %f82}, [%rd73];
	ld.global.v2.f32 	{%f85, %f86}, [barycentrics];
	mul.ftz.f32 	%f89, %f81, %f86;
	mul.ftz.f32 	%f90, %f82, %f86;
	fma.rn.ftz.f32 	%f91, %f77, %f85, %f89;
	fma.rn.ftz.f32 	%f92, %f78, %f85, %f90;
	mov.f32 	%f93, 0f3F800000;
	sub.ftz.f32 	%f94, %f93, %f85;
	sub.ftz.f32 	%f95, %f94, %f86;
	fma.rn.ftz.f32 	%f99, %f73, %f95, %f91;
	fma.rn.ftz.f32 	%f100, %f74, %f95, %f92;

BB0_5:
	st.global.f32 	[texcoord], %f99;
	st.global.f32 	[texcoord+4], %f100;
	st.global.u32 	[texcoord+8], %r12;
	ret;
}

	// .globl	_Z14any_hit_shadowv
.visible .entry _Z14any_hit_shadowv(

)
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<2>;


	mov.u64 	%rd1, 0;
	st.global.u32 	[prd_shadow+4], %rd1;
	st.global.u32 	[prd_shadow], %rd1;
	mov.u32 	%r1, 0;
	st.global.u32 	[prd_shadow+8], %r1;
	// inline asm
	call _rt_terminate_ray, ();
	// inline asm
	ret;
}

	// .globl	_Z20closest_hit_radiancev
.visible .entry _Z20closest_hit_radiancev(

)
{
	.reg .f32 	%f<8>;


	ld.global.v2.f32 	{%f1, %f2}, [barycentrics];
	mov.f32 	%f5, 0f3F800000;
	sub.ftz.f32 	%f6, %f5, %f1;
	sub.ftz.f32 	%f7, %f6, %f2;
	st.global.f32 	[prd_radiance], %f1;
	st.global.f32 	[prd_radiance+4], %f2;
	st.global.f32 	[prd_radiance+8], %f7;
	ret;
}


