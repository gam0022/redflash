//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-26907403
// Cuda compilation tools, release 10.1, V10.1.243
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_30
.address_size 64

	// .globl	_Z14pinhole_camerav
.global .align 4 .b8 geometric_normal[12];
.global .align 4 .b8 shading_normal[12];
.global .align 4 .b8 prd_radiance[20];
.global .align 4 .b8 prd_shadow[12];
.global .align 4 .b8 ray[36];
.global .align 4 .f32 t_hit;
.global .align 8 .b8 launch_index[8];
.global .align 4 .f32 scene_epsilon;
.global .align 4 .b8 top_object[4];
.global .align 4 .b8 eye[12];
.global .align 4 .b8 U[12];
.global .align 4 .b8 V[12];
.global .align 4 .b8 W[12];
.global .align 4 .b8 bad_color[12];
.global .align 1 .b8 output_buffer[1];
.global .texref envmap;
.global .align 4 .b8 Kd[12];
.global .align 4 .b8 Ka[12];
.global .align 4 .b8 Ks[12];
.global .align 4 .f32 phong_exp;
.global .align 4 .b8 ambient_light_color[12];
.global .align 1 .b8 lights[1];
.global .align 4 .b8 top_shadower[4];
.global .align 4 .b8 reflectivity[12];
.global .align 4 .f32 importance_cutoff;
.global .align 4 .u32 max_depth;
.global .align 4 .b8 reflectivity_n[12];
.global .align 4 .b8 _ZN21rti_internal_typeinfo16geometric_normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14shading_normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12prd_radianceE[8] = {82, 97, 121, 0, 20, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10prd_shadowE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3rayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo5t_hitE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12launch_indexE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13scene_epsilonE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10top_objectE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3eyeE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1UE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1VE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1WE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9bad_colorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo2KdE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo2KaE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo2KsE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9phong_expE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo19ambient_light_colorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12top_shadowerE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12reflectivityE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo17importance_cutoffE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9max_depthE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14reflectivity_nE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 1 .b8 _ZN21rti_internal_typename16geometric_normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14shading_normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12prd_radianceE[20] = {80, 101, 114, 82, 97, 121, 68, 97, 116, 97, 95, 114, 97, 100, 105, 97, 110, 99, 101, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10prd_shadowE[18] = {80, 101, 114, 82, 97, 121, 68, 97, 116, 97, 95, 115, 104, 97, 100, 111, 119, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3rayE[11] = {111, 112, 116, 105, 120, 58, 58, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_typename5t_hitE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12launch_indexE[6] = {117, 105, 110, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_typename13scene_epsilonE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10top_objectE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3eyeE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename1UE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename1VE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename1WE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename9bad_colorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename2KdE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename2KaE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename2KsE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename9phong_expE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename19ambient_light_colorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12top_shadowerE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12reflectivityE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename17importance_cutoffE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename9max_depthE[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14reflectivity_nE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum16geometric_normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14shading_normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12prd_radianceE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10prd_shadowE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3rayE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum5t_hitE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12launch_indexE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13scene_epsilonE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10top_objectE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3eyeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum1UE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum1VE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum1WE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9bad_colorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum2KdE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum2KaE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum2KsE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9phong_expE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum19ambient_light_colorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12top_shadowerE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12reflectivityE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum17importance_cutoffE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9max_depthE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14reflectivity_nE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic16geometric_normalE[27] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 103, 101, 111, 109, 101, 116, 114, 105, 99, 95, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic14shading_normalE[25] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 115, 104, 97, 100, 105, 110, 103, 95, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic12prd_radianceE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic10prd_shadowE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic3rayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic5t_hitE[23] = {114, 116, 73, 110, 116, 101, 114, 115, 101, 99, 116, 105, 111, 110, 68, 105, 115, 116, 97, 110, 99, 101, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic12launch_indexE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic13scene_epsilonE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10top_objectE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic3eyeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic1UE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic1VE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic1WE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9bad_colorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic2KdE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic2KaE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic2KsE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9phong_expE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic19ambient_light_colorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12top_shadowerE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12reflectivityE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic17importance_cutoffE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9max_depthE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14reflectivity_nE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation16geometric_normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14shading_normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12prd_radianceE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10prd_shadowE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3rayE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation5t_hitE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12launch_indexE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13scene_epsilonE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10top_objectE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3eyeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1UE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1VE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1WE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9bad_colorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation2KdE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation2KaE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation2KsE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9phong_expE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation19ambient_light_colorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12top_shadowerE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12reflectivityE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation17importance_cutoffE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9max_depthE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14reflectivity_nE[1];

.visible .entry _Z14pinhole_camerav(

)
{
	.local .align 4 .b8 	__local_depot0[20];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .b16 	%rs<5>;
	.reg .f32 	%f<48>;
	.reg .b32 	%r<22>;
	.reg .b64 	%rd<15>;


	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	mov.u64 	%rd13, output_buffer;
	cvta.global.u64 	%rd5, %rd13;
	mov.u32 	%r8, 2;
	mov.u32 	%r9, 4;
	// inline asm
	call (%rd1, %rd2, %rd3, %rd4), _rt_buffer_get_size_64, (%rd5, %r8, %r9);
	// inline asm
	ld.global.v2.u32 	{%r10, %r11}, [launch_index];
	mov.u32 	%r6, 0;
	cvt.rn.f32.u32	%f9, %r10;
	cvt.rn.f32.u32	%f10, %r11;
	cvt.rn.f32.u64	%f11, %rd1;
	cvt.rn.f32.u64	%f12, %rd2;
	div.approx.ftz.f32 	%f13, %f9, %f11;
	div.approx.ftz.f32 	%f14, %f10, %f12;
	fma.rn.ftz.f32 	%f15, %f13, 0f40000000, 0fBF800000;
	fma.rn.ftz.f32 	%f16, %f14, 0f40000000, 0fBF800000;
	ld.global.f32 	%f1, [eye];
	ld.global.f32 	%f2, [eye+4];
	ld.global.f32 	%f3, [eye+8];
	ld.global.f32 	%f17, [U];
	ld.global.f32 	%f18, [U+4];
	ld.global.f32 	%f19, [U+8];
	ld.global.f32 	%f20, [V];
	mul.ftz.f32 	%f21, %f16, %f20;
	ld.global.f32 	%f22, [V+4];
	mul.ftz.f32 	%f23, %f16, %f22;
	ld.global.f32 	%f24, [V+8];
	mul.ftz.f32 	%f25, %f16, %f24;
	fma.rn.ftz.f32 	%f26, %f15, %f17, %f21;
	fma.rn.ftz.f32 	%f27, %f15, %f18, %f23;
	fma.rn.ftz.f32 	%f28, %f15, %f19, %f25;
	ld.global.f32 	%f29, [W];
	add.ftz.f32 	%f30, %f26, %f29;
	ld.global.f32 	%f31, [W+4];
	add.ftz.f32 	%f32, %f27, %f31;
	ld.global.f32 	%f33, [W+8];
	add.ftz.f32 	%f34, %f28, %f33;
	mul.ftz.f32 	%f35, %f32, %f32;
	fma.rn.ftz.f32 	%f36, %f30, %f30, %f35;
	fma.rn.ftz.f32 	%f37, %f34, %f34, %f36;
	rsqrt.approx.ftz.f32 	%f38, %f37;
	mul.ftz.f32 	%f4, %f30, %f38;
	mul.ftz.f32 	%f5, %f32, %f38;
	mul.ftz.f32 	%f6, %f34, %f38;
	ld.global.f32 	%f7, [scene_epsilon];
	add.u64 	%rd6, %SP, 0;
	add.u64 	%rd14, %SPL, 0;
	mov.u32 	%r14, 1065353216;
	st.local.u32 	[%rd14+12], %r14;
	st.local.u32 	[%rd14+16], %r6;
	ld.global.u32 	%r3, [top_object];
	mov.u32 	%r5, 255;
	mov.u32 	%r7, 20;
	mov.f32 	%f8, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_mask_flags_64, (%r3, %f1, %f2, %f3, %f4, %f5, %f6, %r6, %f7, %f8, %r5, %r6, %rd6, %r7);
	// inline asm
	ld.global.v2.u32 	{%r15, %r16}, [launch_index];
	cvt.u64.u32	%rd9, %r15;
	cvt.u64.u32	%rd10, %r16;
	mov.u64 	%rd12, 0;
	// inline asm
	call (%rd7), _rt_buffer_get_64, (%rd5, %r8, %r9, %rd9, %rd10, %rd12, %rd12);
	// inline asm
	ld.local.f32 	%f39, [%rd14+8];
	cvt.ftz.sat.f32.f32	%f40, %f39;
	mul.ftz.f32 	%f41, %f40, 0f437FFD71;
	cvt.rzi.ftz.u32.f32	%r19, %f41;
	ld.local.f32 	%f42, [%rd14+4];
	cvt.ftz.sat.f32.f32	%f43, %f42;
	mul.ftz.f32 	%f44, %f43, 0f437FFD71;
	cvt.rzi.ftz.u32.f32	%r20, %f44;
	ld.local.f32 	%f45, [%rd14];
	cvt.ftz.sat.f32.f32	%f46, %f45;
	mul.ftz.f32 	%f47, %f46, 0f437FFD71;
	cvt.rzi.ftz.u32.f32	%r21, %f47;
	cvt.u16.u32	%rs1, %r21;
	cvt.u16.u32	%rs2, %r20;
	cvt.u16.u32	%rs3, %r19;
	mov.u16 	%rs4, 255;
	st.v4.u8 	[%rd7], {%rs3, %rs2, %rs1, %rs4};
	ret;
}

	// .globl	_Z11envmap_missv
.visible .entry _Z11envmap_missv(

)
{
	.reg .pred 	%p<12>;
	.reg .f32 	%f<72>;
	.reg .b32 	%r<13>;
	.reg .b64 	%rd<2>;


	ld.global.f32 	%f7, [ray+12];
	ld.global.f32 	%f8, [ray+20];
	abs.ftz.f32 	%f1, %f8;
	abs.ftz.f32 	%f2, %f7;
	setp.eq.ftz.f32	%p1, %f1, 0f00000000;
	setp.eq.ftz.f32	%p2, %f2, 0f00000000;
	and.pred  	%p3, %p1, %p2;
	mov.b32 	 %r1, %f8;
	mov.b32 	 %r3, %f7;
	and.b32  	%r2, %r3, -2147483648;
	@%p3 bra 	BB1_4;
	bra.uni 	BB1_1;

BB1_4:
	shr.s32 	%r10, %r1, 31;
	and.b32  	%r11, %r10, 1078530011;
	or.b32  	%r12, %r11, %r2;
	mov.b32 	 %f71, %r12;
	bra.uni 	BB1_5;

BB1_1:
	setp.eq.ftz.f32	%p4, %f1, 0f7F800000;
	setp.eq.ftz.f32	%p5, %f2, 0f7F800000;
	and.pred  	%p6, %p4, %p5;
	@%p6 bra 	BB1_3;
	bra.uni 	BB1_2;

BB1_3:
	shr.s32 	%r6, %r1, 31;
	and.b32  	%r7, %r6, 13483017;
	add.s32 	%r8, %r7, 1061752795;
	or.b32  	%r9, %r8, %r2;
	mov.b32 	 %f71, %r9;
	bra.uni 	BB1_5;

BB1_2:
	max.ftz.f32 	%f9, %f2, %f1;
	min.ftz.f32 	%f10, %f2, %f1;
	div.full.ftz.f32 	%f11, %f10, %f9;
	mul.rn.ftz.f32 	%f12, %f11, %f11;
	mov.f32 	%f13, 0fC0B59883;
	mov.f32 	%f14, 0fBF52C7EA;
	fma.rn.ftz.f32 	%f15, %f12, %f14, %f13;
	mov.f32 	%f16, 0fC0D21907;
	fma.rn.ftz.f32 	%f17, %f15, %f12, %f16;
	mul.ftz.f32 	%f18, %f12, %f17;
	mul.ftz.f32 	%f19, %f11, %f18;
	add.ftz.f32 	%f20, %f12, 0f41355DC0;
	mov.f32 	%f21, 0f41E6BD60;
	fma.rn.ftz.f32 	%f22, %f20, %f12, %f21;
	mov.f32 	%f23, 0f419D92C8;
	fma.rn.ftz.f32 	%f24, %f22, %f12, %f23;
	rcp.approx.ftz.f32 	%f25, %f24;
	fma.rn.ftz.f32 	%f26, %f19, %f25, %f11;
	mov.f32 	%f27, 0f3FC90FDB;
	sub.ftz.f32 	%f28, %f27, %f26;
	setp.gt.ftz.f32	%p7, %f2, %f1;
	selp.f32	%f29, %f28, %f26, %p7;
	mov.f32 	%f30, 0f40490FDB;
	sub.ftz.f32 	%f31, %f30, %f29;
	setp.lt.s32	%p8, %r1, 0;
	selp.f32	%f32, %f31, %f29, %p8;
	mov.b32 	 %r4, %f32;
	or.b32  	%r5, %r4, %r2;
	mov.b32 	 %f33, %r5;
	add.ftz.f32 	%f34, %f1, %f2;
	setp.gtu.ftz.f32	%p9, %f34, 0f7F800000;
	selp.f32	%f71, %f34, %f33, %p9;

BB1_5:
	ld.global.f32 	%f35, [ray+16];
	abs.ftz.f32 	%f36, %f35;
	mov.f32 	%f37, 0f3F800000;
	sub.ftz.f32 	%f38, %f37, %f36;
	mul.ftz.f32 	%f39, %f38, 0f3F000000;
	sqrt.approx.ftz.f32 	%f40, %f39;
	setp.gt.ftz.f32	%p10, %f36, 0f3F11EB85;
	selp.f32	%f41, %f40, %f36, %p10;
	mul.ftz.f32 	%f42, %f41, %f41;
	mov.f32 	%f43, 0f3C94D2E9;
	mov.f32 	%f44, 0f3D53F941;
	fma.rn.ftz.f32 	%f45, %f44, %f42, %f43;
	mov.f32 	%f46, 0f3D3F841F;
	fma.rn.ftz.f32 	%f47, %f45, %f42, %f46;
	mov.f32 	%f48, 0f3D994929;
	fma.rn.ftz.f32 	%f49, %f47, %f42, %f48;
	mov.f32 	%f50, 0f3E2AAB94;
	fma.rn.ftz.f32 	%f51, %f49, %f42, %f50;
	mul.ftz.f32 	%f52, %f42, %f51;
	fma.rn.ftz.f32 	%f53, %f52, %f41, %f41;
	add.ftz.f32 	%f54, %f53, %f53;
	mov.f32 	%f55, 0f3FC90FDB;
	sub.ftz.f32 	%f56, %f55, %f53;
	selp.f32	%f57, %f54, %f56, %p10;
	setp.lt.ftz.f32	%p11, %f35, 0f00000000;
	mov.f32 	%f58, 0f40490FDB;
	sub.ftz.f32 	%f59, %f58, %f57;
	selp.f32	%f60, %f59, %f57, %p11;
	sub.ftz.f32 	%f61, %f55, %f60;
	add.ftz.f32 	%f62, %f71, 0f40490FDB;
	mul.ftz.f32 	%f63, %f62, 0f3E22F983;
	sin.approx.ftz.f32 	%f64, %f61;
	add.ftz.f32 	%f65, %f64, 0f3F800000;
	mul.ftz.f32 	%f66, %f65, 0f3F000000;
	tex.2d.v4.f32.f32	{%f67, %f68, %f69, %f70}, [envmap, {%f63, %f66}];
	st.global.f32 	[prd_radiance], %f67;
	st.global.f32 	[prd_radiance+4], %f68;
	st.global.f32 	[prd_radiance+8], %f69;
	ret;
}

	// .globl	_Z14any_hit_shadowv
.visible .entry _Z14any_hit_shadowv(

)
{
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<2>;


	mov.u64 	%rd1, 0;
	st.global.u32 	[prd_shadow+4], %rd1;
	st.global.u32 	[prd_shadow], %rd1;
	mov.u32 	%r1, 0;
	st.global.u32 	[prd_shadow+8], %r1;
	// inline asm
	call _rt_terminate_ray, ();
	// inline asm
	ret;
}

	// .globl	_Z21closest_hit_radiance3v
.visible .entry _Z21closest_hit_radiance3v(

)
{
	.local .align 4 .b8 	__local_depot3[12];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<6>;
	.reg .f32 	%f<152>;
	.reg .b32 	%r<25>;
	.reg .b64 	%rd<28>;


	mov.u64 	%SPL, __local_depot3;
	cvta.local.u64 	%SP, %SPL;
	ld.global.f32 	%f47, [geometric_normal];
	ld.global.f32 	%f48, [geometric_normal+4];
	ld.global.f32 	%f49, [geometric_normal+8];
	mov.u32 	%r6, 7937;
	mov.f32 	%f58, 0f00000000;
	// inline asm
	call (%f43, %f44, %f45, %f46), _rt_transform_tuple, (%r6, %f47, %f48, %f49, %f58);
	// inline asm
	mul.ftz.f32 	%f59, %f44, %f44;
	fma.rn.ftz.f32 	%f60, %f43, %f43, %f59;
	fma.rn.ftz.f32 	%f61, %f45, %f45, %f60;
	rsqrt.approx.ftz.f32 	%f62, %f61;
	mul.ftz.f32 	%f63, %f43, %f62;
	mul.ftz.f32 	%f64, %f44, %f62;
	mul.ftz.f32 	%f65, %f45, %f62;
	ld.global.f32 	%f55, [shading_normal];
	ld.global.f32 	%f56, [shading_normal+4];
	ld.global.f32 	%f57, [shading_normal+8];
	// inline asm
	call (%f51, %f52, %f53, %f54), _rt_transform_tuple, (%r6, %f55, %f56, %f57, %f58);
	// inline asm
	mul.ftz.f32 	%f66, %f52, %f52;
	fma.rn.ftz.f32 	%f67, %f51, %f51, %f66;
	fma.rn.ftz.f32 	%f68, %f53, %f53, %f67;
	rsqrt.approx.ftz.f32 	%f69, %f68;
	mul.ftz.f32 	%f70, %f51, %f69;
	mul.ftz.f32 	%f71, %f52, %f69;
	mul.ftz.f32 	%f72, %f53, %f69;
	ld.global.f32 	%f73, [ray+12];
	mul.ftz.f32 	%f74, %f63, %f73;
	ld.global.f32 	%f75, [ray+16];
	mul.ftz.f32 	%f76, %f64, %f75;
	neg.ftz.f32 	%f77, %f76;
	sub.ftz.f32 	%f78, %f77, %f74;
	ld.global.f32 	%f79, [ray+20];
	mul.ftz.f32 	%f80, %f65, %f79;
	sub.ftz.f32 	%f81, %f78, %f80;
	mov.b32 	 %r9, %f81;
	and.b32  	%r10, %r9, -2147483648;
	or.b32  	%r11, %r10, 1065353216;
	mov.b32 	 %f82, %r11;
	mul.ftz.f32 	%f1, %f70, %f82;
	mul.ftz.f32 	%f2, %f71, %f82;
	mul.ftz.f32 	%f3, %f72, %f82;
	ld.global.f32 	%f83, [ambient_light_color];
	ld.global.f32 	%f84, [Ka];
	mul.ftz.f32 	%f146, %f84, %f83;
	ld.global.f32 	%f85, [ambient_light_color+4];
	ld.global.f32 	%f86, [Ka+4];
	mul.ftz.f32 	%f147, %f86, %f85;
	ld.global.f32 	%f87, [ambient_light_color+8];
	ld.global.f32 	%f88, [Ka+8];
	mul.ftz.f32 	%f148, %f88, %f87;
	ld.global.f32 	%f89, [t_hit];
	ld.global.f32 	%f90, [ray];
	fma.rn.ftz.f32 	%f7, %f89, %f73, %f90;
	ld.global.f32 	%f91, [ray+4];
	fma.rn.ftz.f32 	%f8, %f89, %f75, %f91;
	ld.global.f32 	%f92, [ray+8];
	fma.rn.ftz.f32 	%f9, %f89, %f79, %f92;
	mov.u64 	%rd8, lights;
	cvta.global.u64 	%rd7, %rd8;
	mov.u32 	%r7, 1;
	mov.u32 	%r8, 32;
	// inline asm
	call (%rd3, %rd4, %rd5, %rd6), _rt_buffer_get_size_64, (%rd7, %r7, %r8);
	// inline asm
	cvt.u32.u64	%r12, %rd3;
	setp.eq.s32	%p1, %r12, 0;
	@%p1 bra 	BB3_7;

	mov.u32 	%r24, 0;
	mov.u64 	%rd9, 0;
	mov.u64 	%rd27, %rd9;

BB3_2:
	// inline asm
	call (%rd10), _rt_buffer_get_64, (%rd7, %r7, %r8, %rd27, %rd9, %rd9, %rd9);
	// inline asm
	ld.f32 	%f13, [%rd10];
	ld.f32 	%f14, [%rd10+4];
	ld.f32 	%f15, [%rd10+8];
	ld.f32 	%f16, [%rd10+12];
	ld.f32 	%f17, [%rd10+16];
	ld.f32 	%f18, [%rd10+20];
	sub.ftz.f32 	%f93, %f13, %f7;
	sub.ftz.f32 	%f94, %f14, %f8;
	sub.ftz.f32 	%f95, %f15, %f9;
	mul.ftz.f32 	%f96, %f94, %f94;
	fma.rn.ftz.f32 	%f97, %f93, %f93, %f96;
	fma.rn.ftz.f32 	%f98, %f95, %f95, %f97;
	sqrt.approx.ftz.f32 	%f19, %f98;
	rsqrt.approx.ftz.f32 	%f99, %f98;
	mul.ftz.f32 	%f20, %f93, %f99;
	mul.ftz.f32 	%f21, %f94, %f99;
	mul.ftz.f32 	%f22, %f95, %f99;
	mul.ftz.f32 	%f100, %f2, %f21;
	fma.rn.ftz.f32 	%f101, %f1, %f20, %f100;
	fma.rn.ftz.f32 	%f23, %f3, %f22, %f101;
	setp.leu.ftz.f32	%p2, %f23, 0f00000000;
	@%p2 bra 	BB3_6;

	add.u64 	%rd17, %SP, 0;
	add.u64 	%rd18, %SPL, 0;
	mov.u64 	%rd19, 1065353216;
	st.local.u32 	[%rd18+4], %rd19;
	st.local.u32 	[%rd18], %rd19;
	mov.u32 	%r21, 1065353216;
	st.local.u32 	[%rd18+8], %r21;
	ld.global.f32 	%f108, [scene_epsilon];
	ld.global.u32 	%r16, [top_shadower];
	mov.u32 	%r18, 255;
	mov.u32 	%r19, 0;
	mov.u32 	%r20, 12;
	// inline asm
	call _rt_trace_mask_flags_64, (%r16, %f7, %f8, %f9, %f20, %f21, %f22, %r7, %f108, %f19, %r18, %r19, %rd17, %r20);
	// inline asm
	ld.local.f32 	%f25, [%rd18];
	ld.local.f32 	%f24, [%rd18+4];
	ld.local.f32 	%f26, [%rd18+8];
	max.ftz.f32 	%f110, %f25, %f24;
	max.ftz.f32 	%f111, %f110, %f26;
	setp.leu.ftz.f32	%p3, %f111, 0f00000000;
	@%p3 bra 	BB3_6;

	mul.ftz.f32 	%f27, %f16, %f25;
	ld.global.f32 	%f112, [Kd];
	mul.ftz.f32 	%f113, %f23, %f112;
	ld.global.f32 	%f114, [Kd+4];
	mul.ftz.f32 	%f115, %f23, %f114;
	ld.global.f32 	%f116, [Kd+8];
	mul.ftz.f32 	%f117, %f23, %f116;
	mul.ftz.f32 	%f28, %f17, %f24;
	mul.ftz.f32 	%f29, %f18, %f26;
	fma.rn.ftz.f32 	%f146, %f27, %f113, %f146;
	fma.rn.ftz.f32 	%f147, %f28, %f115, %f147;
	fma.rn.ftz.f32 	%f148, %f29, %f117, %f148;
	ld.global.f32 	%f118, [ray+12];
	sub.ftz.f32 	%f119, %f20, %f118;
	ld.global.f32 	%f120, [ray+16];
	sub.ftz.f32 	%f121, %f21, %f120;
	ld.global.f32 	%f122, [ray+20];
	sub.ftz.f32 	%f123, %f22, %f122;
	mul.ftz.f32 	%f124, %f121, %f121;
	fma.rn.ftz.f32 	%f125, %f119, %f119, %f124;
	fma.rn.ftz.f32 	%f126, %f123, %f123, %f125;
	rsqrt.approx.ftz.f32 	%f127, %f126;
	mul.ftz.f32 	%f128, %f119, %f127;
	mul.ftz.f32 	%f129, %f121, %f127;
	mul.ftz.f32 	%f130, %f123, %f127;
	mul.ftz.f32 	%f131, %f2, %f129;
	fma.rn.ftz.f32 	%f132, %f1, %f128, %f131;
	fma.rn.ftz.f32 	%f33, %f3, %f130, %f132;
	setp.leu.ftz.f32	%p4, %f33, 0f00000000;
	@%p4 bra 	BB3_6;

	ld.global.f32 	%f133, [Ks];
	mul.ftz.f32 	%f134, %f27, %f133;
	ld.global.f32 	%f135, [Ks+4];
	mul.ftz.f32 	%f136, %f28, %f135;
	ld.global.f32 	%f137, [Ks+8];
	mul.ftz.f32 	%f138, %f29, %f137;
	lg2.approx.ftz.f32 	%f139, %f33;
	ld.global.f32 	%f140, [phong_exp];
	mul.ftz.f32 	%f141, %f140, %f139;
	ex2.approx.ftz.f32 	%f142, %f141;
	fma.rn.ftz.f32 	%f146, %f134, %f142, %f146;
	fma.rn.ftz.f32 	%f147, %f136, %f142, %f147;
	fma.rn.ftz.f32 	%f148, %f138, %f142, %f148;

BB3_6:
	add.s32 	%r24, %r24, 1;
	cvt.s64.s32	%rd27, %r24;
	// inline asm
	call (%rd20, %rd21, %rd22, %rd23), _rt_buffer_get_size_64, (%rd7, %r7, %r8);
	// inline asm
	and.b64  	%rd26, %rd20, 4294967295;
	setp.lt.u64	%p5, %rd27, %rd26;
	@%p5 bra 	BB3_2;

BB3_7:
	st.global.f32 	[prd_radiance], %f146;
	st.global.f32 	[prd_radiance+4], %f147;
	st.global.f32 	[prd_radiance+8], %f148;
	ret;
}

	// .globl	_Z27floor_closest_hit_radiance5v
.visible .entry _Z27floor_closest_hit_radiance5v(

)
{
	.local .align 4 .b8 	__local_depot4[32];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<9>;
	.reg .f32 	%f<212>;
	.reg .b32 	%r<33>;
	.reg .b64 	%rd<30>;


	mov.u64 	%SPL, __local_depot4;
	cvta.local.u64 	%SP, %SPL;
	ld.global.f32 	%f61, [geometric_normal];
	ld.global.f32 	%f62, [geometric_normal+4];
	ld.global.f32 	%f63, [geometric_normal+8];
	mov.u32 	%r7, 7937;
	mov.f32 	%f72, 0f00000000;
	// inline asm
	call (%f57, %f58, %f59, %f60), _rt_transform_tuple, (%r7, %f61, %f62, %f63, %f72);
	// inline asm
	mul.ftz.f32 	%f73, %f58, %f58;
	fma.rn.ftz.f32 	%f74, %f57, %f57, %f73;
	fma.rn.ftz.f32 	%f75, %f59, %f59, %f74;
	rsqrt.approx.ftz.f32 	%f76, %f75;
	mul.ftz.f32 	%f77, %f57, %f76;
	mul.ftz.f32 	%f78, %f58, %f76;
	mul.ftz.f32 	%f79, %f59, %f76;
	ld.global.f32 	%f69, [shading_normal];
	ld.global.f32 	%f70, [shading_normal+4];
	ld.global.f32 	%f71, [shading_normal+8];
	// inline asm
	call (%f65, %f66, %f67, %f68), _rt_transform_tuple, (%r7, %f69, %f70, %f71, %f72);
	// inline asm
	mul.ftz.f32 	%f80, %f66, %f66;
	fma.rn.ftz.f32 	%f81, %f65, %f65, %f80;
	fma.rn.ftz.f32 	%f82, %f67, %f67, %f81;
	rsqrt.approx.ftz.f32 	%f83, %f82;
	mul.ftz.f32 	%f84, %f65, %f83;
	mul.ftz.f32 	%f85, %f66, %f83;
	mul.ftz.f32 	%f86, %f67, %f83;
	ld.global.f32 	%f87, [ray+12];
	mul.ftz.f32 	%f88, %f77, %f87;
	ld.global.f32 	%f89, [ray+16];
	mul.ftz.f32 	%f90, %f78, %f89;
	neg.ftz.f32 	%f91, %f90;
	sub.ftz.f32 	%f92, %f91, %f88;
	ld.global.f32 	%f93, [ray+20];
	mul.ftz.f32 	%f94, %f79, %f93;
	sub.ftz.f32 	%f95, %f92, %f94;
	mov.b32 	 %r10, %f95;
	and.b32  	%r11, %r10, -2147483648;
	or.b32  	%r12, %r11, 1065353216;
	mov.b32 	 %f96, %r12;
	mul.ftz.f32 	%f1, %f84, %f96;
	mul.ftz.f32 	%f2, %f85, %f96;
	mul.ftz.f32 	%f3, %f86, %f96;
	ld.global.f32 	%f97, [ambient_light_color];
	ld.global.f32 	%f98, [Ka];
	mul.ftz.f32 	%f203, %f98, %f97;
	ld.global.f32 	%f99, [ambient_light_color+4];
	ld.global.f32 	%f100, [Ka+4];
	mul.ftz.f32 	%f204, %f100, %f99;
	ld.global.f32 	%f101, [ambient_light_color+8];
	ld.global.f32 	%f102, [Ka+8];
	mul.ftz.f32 	%f205, %f102, %f101;
	ld.global.f32 	%f103, [t_hit];
	ld.global.f32 	%f104, [ray];
	fma.rn.ftz.f32 	%f7, %f103, %f87, %f104;
	ld.global.f32 	%f105, [ray+4];
	fma.rn.ftz.f32 	%f8, %f103, %f89, %f105;
	ld.global.f32 	%f106, [ray+8];
	fma.rn.ftz.f32 	%f9, %f103, %f93, %f106;
	mov.u64 	%rd8, lights;
	cvta.global.u64 	%rd7, %rd8;
	mov.u32 	%r8, 1;
	mov.u32 	%r9, 32;
	// inline asm
	call (%rd3, %rd4, %rd5, %rd6), _rt_buffer_get_size_64, (%rd7, %r8, %r9);
	// inline asm
	cvt.u32.u64	%r13, %rd3;
	setp.eq.s32	%p1, %r13, 0;
	@%p1 bra 	BB4_7;

	mov.u32 	%r32, 0;
	mov.u64 	%rd9, 0;
	mov.u64 	%rd29, %rd9;

BB4_2:
	// inline asm
	call (%rd10), _rt_buffer_get_64, (%rd7, %r8, %r9, %rd29, %rd9, %rd9, %rd9);
	// inline asm
	ld.f32 	%f13, [%rd10];
	ld.f32 	%f14, [%rd10+4];
	ld.f32 	%f15, [%rd10+8];
	ld.f32 	%f16, [%rd10+12];
	ld.f32 	%f17, [%rd10+16];
	ld.f32 	%f18, [%rd10+20];
	sub.ftz.f32 	%f107, %f13, %f7;
	sub.ftz.f32 	%f108, %f14, %f8;
	sub.ftz.f32 	%f109, %f15, %f9;
	mul.ftz.f32 	%f110, %f108, %f108;
	fma.rn.ftz.f32 	%f111, %f107, %f107, %f110;
	fma.rn.ftz.f32 	%f112, %f109, %f109, %f111;
	sqrt.approx.ftz.f32 	%f19, %f112;
	rsqrt.approx.ftz.f32 	%f113, %f112;
	mul.ftz.f32 	%f20, %f107, %f113;
	mul.ftz.f32 	%f21, %f108, %f113;
	mul.ftz.f32 	%f22, %f109, %f113;
	mul.ftz.f32 	%f114, %f2, %f21;
	fma.rn.ftz.f32 	%f115, %f1, %f20, %f114;
	fma.rn.ftz.f32 	%f23, %f3, %f22, %f115;
	setp.leu.ftz.f32	%p2, %f23, 0f00000000;
	@%p2 bra 	BB4_6;

	add.u64 	%rd17, %SP, 20;
	add.u64 	%rd18, %SPL, 20;
	mov.u64 	%rd19, 1065353216;
	st.local.u32 	[%rd18+4], %rd19;
	st.local.u32 	[%rd18], %rd19;
	mov.u32 	%r22, 1065353216;
	st.local.u32 	[%rd18+8], %r22;
	ld.global.f32 	%f122, [scene_epsilon];
	ld.global.u32 	%r17, [top_shadower];
	mov.u32 	%r19, 255;
	mov.u32 	%r20, 0;
	mov.u32 	%r21, 12;
	// inline asm
	call _rt_trace_mask_flags_64, (%r17, %f7, %f8, %f9, %f20, %f21, %f22, %r8, %f122, %f19, %r19, %r20, %rd17, %r21);
	// inline asm
	ld.local.f32 	%f25, [%rd18];
	ld.local.f32 	%f24, [%rd18+4];
	ld.local.f32 	%f26, [%rd18+8];
	max.ftz.f32 	%f124, %f25, %f24;
	max.ftz.f32 	%f125, %f124, %f26;
	setp.leu.ftz.f32	%p3, %f125, 0f00000000;
	@%p3 bra 	BB4_6;

	mul.ftz.f32 	%f27, %f16, %f25;
	ld.global.f32 	%f126, [Kd];
	mul.ftz.f32 	%f127, %f23, %f126;
	ld.global.f32 	%f128, [Kd+4];
	mul.ftz.f32 	%f129, %f23, %f128;
	ld.global.f32 	%f130, [Kd+8];
	mul.ftz.f32 	%f131, %f23, %f130;
	mul.ftz.f32 	%f28, %f17, %f24;
	mul.ftz.f32 	%f29, %f18, %f26;
	fma.rn.ftz.f32 	%f203, %f27, %f127, %f203;
	fma.rn.ftz.f32 	%f204, %f28, %f129, %f204;
	fma.rn.ftz.f32 	%f205, %f29, %f131, %f205;
	ld.global.f32 	%f132, [ray+12];
	sub.ftz.f32 	%f133, %f20, %f132;
	ld.global.f32 	%f134, [ray+16];
	sub.ftz.f32 	%f135, %f21, %f134;
	ld.global.f32 	%f136, [ray+20];
	sub.ftz.f32 	%f137, %f22, %f136;
	mul.ftz.f32 	%f138, %f135, %f135;
	fma.rn.ftz.f32 	%f139, %f133, %f133, %f138;
	fma.rn.ftz.f32 	%f140, %f137, %f137, %f139;
	rsqrt.approx.ftz.f32 	%f141, %f140;
	mul.ftz.f32 	%f142, %f133, %f141;
	mul.ftz.f32 	%f143, %f135, %f141;
	mul.ftz.f32 	%f144, %f137, %f141;
	mul.ftz.f32 	%f145, %f2, %f143;
	fma.rn.ftz.f32 	%f146, %f1, %f142, %f145;
	fma.rn.ftz.f32 	%f33, %f3, %f144, %f146;
	setp.leu.ftz.f32	%p4, %f33, 0f00000000;
	@%p4 bra 	BB4_6;

	ld.global.f32 	%f147, [Ks];
	mul.ftz.f32 	%f148, %f27, %f147;
	ld.global.f32 	%f149, [Ks+4];
	mul.ftz.f32 	%f150, %f28, %f149;
	ld.global.f32 	%f151, [Ks+8];
	mul.ftz.f32 	%f152, %f29, %f151;
	lg2.approx.ftz.f32 	%f153, %f33;
	ld.global.f32 	%f154, [phong_exp];
	mul.ftz.f32 	%f155, %f154, %f153;
	ex2.approx.ftz.f32 	%f156, %f155;
	fma.rn.ftz.f32 	%f203, %f148, %f156, %f203;
	fma.rn.ftz.f32 	%f204, %f150, %f156, %f204;
	fma.rn.ftz.f32 	%f205, %f152, %f156, %f205;

BB4_6:
	add.s32 	%r32, %r32, 1;
	cvt.s64.s32	%rd29, %r32;
	// inline asm
	call (%rd20, %rd21, %rd22, %rd23), _rt_buffer_get_size_64, (%rd7, %r8, %r9);
	// inline asm
	and.b64  	%rd26, %rd20, 4294967295;
	setp.lt.u64	%p5, %rd29, %rd26;
	@%p5 bra 	BB4_2;

BB4_7:
	ld.global.f32 	%f43, [ray+12];
	ld.global.f32 	%f44, [ray+16];
	mul.ftz.f32 	%f157, %f2, %f44;
	fma.rn.ftz.f32 	%f158, %f1, %f43, %f157;
	ld.global.f32 	%f45, [ray+20];
	fma.rn.ftz.f32 	%f46, %f3, %f45, %f158;
	ld.global.f32 	%f159, [reflectivity_n];
	mov.f32 	%f160, 0f3F800000;
	sub.ftz.f32 	%f161, %f160, %f159;
	add.ftz.f32 	%f162, %f46, 0f3F800000;
	max.ftz.f32 	%f164, %f72, %f162;
	lg2.approx.ftz.f32 	%f165, %f164;
	mul.ftz.f32 	%f166, %f165, 0f40A00000;
	ex2.approx.ftz.f32 	%f167, %f166;
	fma.rn.ftz.f32 	%f168, %f161, %f167, %f159;
	min.ftz.f32 	%f169, %f168, %f160;
	max.ftz.f32 	%f47, %f159, %f169;
	ld.global.f32 	%f170, [reflectivity_n+4];
	sub.ftz.f32 	%f171, %f160, %f170;
	fma.rn.ftz.f32 	%f172, %f167, %f171, %f170;
	min.ftz.f32 	%f173, %f172, %f160;
	max.ftz.f32 	%f48, %f170, %f173;
	ld.global.f32 	%f174, [reflectivity_n+8];
	sub.ftz.f32 	%f175, %f160, %f174;
	fma.rn.ftz.f32 	%f176, %f167, %f175, %f174;
	min.ftz.f32 	%f177, %f176, %f160;
	max.ftz.f32 	%f49, %f174, %f177;
	mul.ftz.f32 	%f178, %f48, 0f3F170A3D;
	fma.rn.ftz.f32 	%f179, %f47, 0f3E99999A, %f178;
	fma.rn.ftz.f32 	%f180, %f49, 0f3DE147AE, %f179;
	ld.global.f32 	%f181, [prd_radiance+12];
	mul.ftz.f32 	%f50, %f181, %f180;
	ld.global.f32 	%f182, [importance_cutoff];
	setp.leu.ftz.f32	%p6, %f50, %f182;
	ld.global.u32 	%r25, [max_depth];
	ld.global.u32 	%r5, [prd_radiance+16];
	setp.ge.s32	%p7, %r5, %r25;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	BB4_9;

	add.u64 	%rd27, %SP, 0;
	add.u64 	%rd28, %SPL, 0;
	st.local.f32 	[%rd28+12], %f50;
	add.s32 	%r31, %r5, 1;
	st.local.u32 	[%rd28+16], %r31;
	add.ftz.f32 	%f191, %f1, %f1;
	mul.ftz.f32 	%f192, %f191, %f46;
	add.ftz.f32 	%f193, %f2, %f2;
	mul.ftz.f32 	%f194, %f193, %f46;
	add.ftz.f32 	%f195, %f3, %f3;
	mul.ftz.f32 	%f196, %f195, %f46;
	sub.ftz.f32 	%f186, %f43, %f192;
	sub.ftz.f32 	%f187, %f44, %f194;
	sub.ftz.f32 	%f188, %f45, %f196;
	ld.global.f32 	%f189, [scene_epsilon];
	ld.global.u32 	%r26, [top_object];
	mov.u32 	%r28, 255;
	mov.u32 	%r29, 0;
	mov.u32 	%r30, 20;
	mov.f32 	%f190, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_mask_flags_64, (%r26, %f7, %f8, %f9, %f186, %f187, %f188, %r29, %f189, %f190, %r28, %r29, %rd27, %r30);
	// inline asm
	ld.local.f32 	%f197, [%rd28];
	ld.local.f32 	%f198, [%rd28+4];
	ld.local.f32 	%f199, [%rd28+8];
	fma.rn.ftz.f32 	%f203, %f47, %f197, %f203;
	fma.rn.ftz.f32 	%f204, %f48, %f198, %f204;
	fma.rn.ftz.f32 	%f205, %f49, %f199, %f205;

BB4_9:
	st.global.f32 	[prd_radiance], %f203;
	st.global.f32 	[prd_radiance+4], %f204;
	st.global.f32 	[prd_radiance+8], %f205;
	ret;
}

	// .globl	_Z9exceptionv
.visible .entry _Z9exceptionv(

)
{
	.reg .b16 	%rs<5>;
	.reg .f32 	%f<10>;
	.reg .b32 	%r<10>;
	.reg .b64 	%rd<8>;


	ld.global.v2.u32 	{%r3, %r4}, [launch_index];
	cvt.u64.u32	%rd3, %r3;
	cvt.u64.u32	%rd4, %r4;
	mov.u64 	%rd7, output_buffer;
	cvta.global.u64 	%rd2, %rd7;
	mov.u32 	%r1, 2;
	mov.u32 	%r2, 4;
	mov.u64 	%rd6, 0;
	// inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r1, %r2, %rd3, %rd4, %rd6, %rd6);
	// inline asm
	ld.global.f32 	%f1, [bad_color+8];
	cvt.ftz.sat.f32.f32	%f2, %f1;
	mul.ftz.f32 	%f3, %f2, 0f437FFD71;
	cvt.rzi.ftz.u32.f32	%r7, %f3;
	ld.global.f32 	%f4, [bad_color+4];
	cvt.ftz.sat.f32.f32	%f5, %f4;
	mul.ftz.f32 	%f6, %f5, 0f437FFD71;
	cvt.rzi.ftz.u32.f32	%r8, %f6;
	ld.global.f32 	%f7, [bad_color];
	cvt.ftz.sat.f32.f32	%f8, %f7;
	mul.ftz.f32 	%f9, %f8, 0f437FFD71;
	cvt.rzi.ftz.u32.f32	%r9, %f9;
	cvt.u16.u32	%rs1, %r9;
	cvt.u16.u32	%rs2, %r8;
	cvt.u16.u32	%rs3, %r7;
	mov.u16 	%rs4, 255;
	st.v4.u8 	[%rd1], {%rs3, %rs2, %rs1, %rs4};
	ret;
}


